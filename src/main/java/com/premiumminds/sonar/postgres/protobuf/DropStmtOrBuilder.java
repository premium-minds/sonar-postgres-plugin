// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface DropStmtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.DropStmt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .pg_query.Node objects = 1 [json_name = "objects"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getObjectsList();
  /**
   * <code>repeated .pg_query.Node objects = 1 [json_name = "objects"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getObjects(int index);
  /**
   * <code>repeated .pg_query.Node objects = 1 [json_name = "objects"];</code>
   */
  int getObjectsCount();
  /**
   * <code>repeated .pg_query.Node objects = 1 [json_name = "objects"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getObjectsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node objects = 1 [json_name = "objects"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getObjectsOrBuilder(
      int index);

  /**
   * <code>.pg_query.ObjectType remove_type = 2 [json_name = "removeType"];</code>
   * @return The enum numeric value on the wire for removeType.
   */
  int getRemoveTypeValue();
  /**
   * <code>.pg_query.ObjectType remove_type = 2 [json_name = "removeType"];</code>
   * @return The removeType.
   */
  com.premiumminds.sonar.postgres.protobuf.ObjectType getRemoveType();

  /**
   * <code>.pg_query.DropBehavior behavior = 3 [json_name = "behavior"];</code>
   * @return The enum numeric value on the wire for behavior.
   */
  int getBehaviorValue();
  /**
   * <code>.pg_query.DropBehavior behavior = 3 [json_name = "behavior"];</code>
   * @return The behavior.
   */
  com.premiumminds.sonar.postgres.protobuf.DropBehavior getBehavior();

  /**
   * <code>bool missing_ok = 4 [json_name = "missing_ok"];</code>
   * @return The missingOk.
   */
  boolean getMissingOk();

  /**
   * <code>bool concurrent = 5 [json_name = "concurrent"];</code>
   * @return The concurrent.
   */
  boolean getConcurrent();
}
