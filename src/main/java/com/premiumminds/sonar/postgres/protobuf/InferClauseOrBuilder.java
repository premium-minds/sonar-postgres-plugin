// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface InferClauseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.InferClause)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .pg_query.Node index_elems = 1 [json_name = "indexElems"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getIndexElemsList();
  /**
   * <code>repeated .pg_query.Node index_elems = 1 [json_name = "indexElems"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getIndexElems(int index);
  /**
   * <code>repeated .pg_query.Node index_elems = 1 [json_name = "indexElems"];</code>
   */
  int getIndexElemsCount();
  /**
   * <code>repeated .pg_query.Node index_elems = 1 [json_name = "indexElems"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getIndexElemsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node index_elems = 1 [json_name = "indexElems"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getIndexElemsOrBuilder(
      int index);

  /**
   * <code>.pg_query.Node where_clause = 2 [json_name = "whereClause"];</code>
   * @return Whether the whereClause field is set.
   */
  boolean hasWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 2 [json_name = "whereClause"];</code>
   * @return The whereClause.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 2 [json_name = "whereClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWhereClauseOrBuilder();

  /**
   * <code>string conname = 3 [json_name = "conname"];</code>
   * @return The conname.
   */
  java.lang.String getConname();
  /**
   * <code>string conname = 3 [json_name = "conname"];</code>
   * @return The bytes for conname.
   */
  com.google.protobuf.ByteString
      getConnameBytes();

  /**
   * <code>int32 location = 4 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
