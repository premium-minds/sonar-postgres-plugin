// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.postgres.protobuf;

public interface JsonConstructorExprOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.JsonConstructorExpr)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   * @return Whether the xpr field is set.
   */
  boolean hasXpr();
  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   * @return The xpr.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getXpr();
  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getXprOrBuilder();

  /**
   * <code>.pg_query.JsonConstructorType type = 2 [json_name = "type"];</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.pg_query.JsonConstructorType type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonConstructorType getType();

  /**
   * <code>repeated .pg_query.Node args = 3 [json_name = "args"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getArgsList();
  /**
   * <code>repeated .pg_query.Node args = 3 [json_name = "args"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getArgs(int index);
  /**
   * <code>repeated .pg_query.Node args = 3 [json_name = "args"];</code>
   */
  int getArgsCount();
  /**
   * <code>repeated .pg_query.Node args = 3 [json_name = "args"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getArgsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node args = 3 [json_name = "args"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getArgsOrBuilder(
      int index);

  /**
   * <code>.pg_query.Node func = 4 [json_name = "func"];</code>
   * @return Whether the func field is set.
   */
  boolean hasFunc();
  /**
   * <code>.pg_query.Node func = 4 [json_name = "func"];</code>
   * @return The func.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFunc();
  /**
   * <code>.pg_query.Node func = 4 [json_name = "func"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFuncOrBuilder();

  /**
   * <code>.pg_query.Node coercion = 5 [json_name = "coercion"];</code>
   * @return Whether the coercion field is set.
   */
  boolean hasCoercion();
  /**
   * <code>.pg_query.Node coercion = 5 [json_name = "coercion"];</code>
   * @return The coercion.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getCoercion();
  /**
   * <code>.pg_query.Node coercion = 5 [json_name = "coercion"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCoercionOrBuilder();

  /**
   * <code>.pg_query.JsonReturning returning = 6 [json_name = "returning"];</code>
   * @return Whether the returning field is set.
   */
  boolean hasReturning();
  /**
   * <code>.pg_query.JsonReturning returning = 6 [json_name = "returning"];</code>
   * @return The returning.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonReturning getReturning();
  /**
   * <code>.pg_query.JsonReturning returning = 6 [json_name = "returning"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonReturningOrBuilder getReturningOrBuilder();

  /**
   * <code>bool absent_on_null = 7 [json_name = "absent_on_null"];</code>
   * @return The absentOnNull.
   */
  boolean getAbsentOnNull();

  /**
   * <code>bool unique = 8 [json_name = "unique"];</code>
   * @return The unique.
   */
  boolean getUnique();

  /**
   * <code>int32 location = 9 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
