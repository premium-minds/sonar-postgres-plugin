// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.postgres.protobuf;

/**
 * Protobuf type {@code pg_query.SelectStmt}
 */
public final class SelectStmt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pg_query.SelectStmt)
    SelectStmtOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SelectStmt.newBuilder() to construct.
  private SelectStmt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SelectStmt() {
    distinctClause_ = java.util.Collections.emptyList();
    targetList_ = java.util.Collections.emptyList();
    fromClause_ = java.util.Collections.emptyList();
    groupClause_ = java.util.Collections.emptyList();
    windowClause_ = java.util.Collections.emptyList();
    valuesLists_ = java.util.Collections.emptyList();
    sortClause_ = java.util.Collections.emptyList();
    limitOption_ = 0;
    lockingClause_ = java.util.Collections.emptyList();
    op_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SelectStmt();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_SelectStmt_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_SelectStmt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.premiumminds.sonar.postgres.protobuf.SelectStmt.class, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder.class);
  }

  public static final int DISTINCT_CLAUSE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> distinctClause_;
  /**
   * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getDistinctClauseList() {
    return distinctClause_;
  }
  /**
   * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getDistinctClauseOrBuilderList() {
    return distinctClause_;
  }
  /**
   * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
   */
  @java.lang.Override
  public int getDistinctClauseCount() {
    return distinctClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getDistinctClause(int index) {
    return distinctClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getDistinctClauseOrBuilder(
      int index) {
    return distinctClause_.get(index);
  }

  public static final int INTO_CLAUSE_FIELD_NUMBER = 2;
  private com.premiumminds.sonar.postgres.protobuf.IntoClause intoClause_;
  /**
   * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
   * @return Whether the intoClause field is set.
   */
  @java.lang.Override
  public boolean hasIntoClause() {
    return intoClause_ != null;
  }
  /**
   * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
   * @return The intoClause.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.IntoClause getIntoClause() {
    return intoClause_ == null ? com.premiumminds.sonar.postgres.protobuf.IntoClause.getDefaultInstance() : intoClause_;
  }
  /**
   * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.IntoClauseOrBuilder getIntoClauseOrBuilder() {
    return intoClause_ == null ? com.premiumminds.sonar.postgres.protobuf.IntoClause.getDefaultInstance() : intoClause_;
  }

  public static final int TARGET_LIST_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> targetList_;
  /**
   * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getTargetListList() {
    return targetList_;
  }
  /**
   * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getTargetListOrBuilderList() {
    return targetList_;
  }
  /**
   * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
   */
  @java.lang.Override
  public int getTargetListCount() {
    return targetList_.size();
  }
  /**
   * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getTargetList(int index) {
    return targetList_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getTargetListOrBuilder(
      int index) {
    return targetList_.get(index);
  }

  public static final int FROM_CLAUSE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> fromClause_;
  /**
   * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getFromClauseList() {
    return fromClause_;
  }
  /**
   * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getFromClauseOrBuilderList() {
    return fromClause_;
  }
  /**
   * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
   */
  @java.lang.Override
  public int getFromClauseCount() {
    return fromClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getFromClause(int index) {
    return fromClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFromClauseOrBuilder(
      int index) {
    return fromClause_.get(index);
  }

  public static final int WHERE_CLAUSE_FIELD_NUMBER = 5;
  private com.premiumminds.sonar.postgres.protobuf.Node whereClause_;
  /**
   * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
   * @return Whether the whereClause field is set.
   */
  @java.lang.Override
  public boolean hasWhereClause() {
    return whereClause_ != null;
  }
  /**
   * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
   * @return The whereClause.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getWhereClause() {
    return whereClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : whereClause_;
  }
  /**
   * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWhereClauseOrBuilder() {
    return whereClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : whereClause_;
  }

  public static final int GROUP_CLAUSE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> groupClause_;
  /**
   * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getGroupClauseList() {
    return groupClause_;
  }
  /**
   * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getGroupClauseOrBuilderList() {
    return groupClause_;
  }
  /**
   * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
   */
  @java.lang.Override
  public int getGroupClauseCount() {
    return groupClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getGroupClause(int index) {
    return groupClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getGroupClauseOrBuilder(
      int index) {
    return groupClause_.get(index);
  }

  public static final int GROUP_DISTINCT_FIELD_NUMBER = 7;
  private boolean groupDistinct_ = false;
  /**
   * <code>bool group_distinct = 7 [json_name = "groupDistinct"];</code>
   * @return The groupDistinct.
   */
  @java.lang.Override
  public boolean getGroupDistinct() {
    return groupDistinct_;
  }

  public static final int HAVING_CLAUSE_FIELD_NUMBER = 8;
  private com.premiumminds.sonar.postgres.protobuf.Node havingClause_;
  /**
   * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
   * @return Whether the havingClause field is set.
   */
  @java.lang.Override
  public boolean hasHavingClause() {
    return havingClause_ != null;
  }
  /**
   * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
   * @return The havingClause.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getHavingClause() {
    return havingClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : havingClause_;
  }
  /**
   * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getHavingClauseOrBuilder() {
    return havingClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : havingClause_;
  }

  public static final int WINDOW_CLAUSE_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> windowClause_;
  /**
   * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getWindowClauseList() {
    return windowClause_;
  }
  /**
   * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getWindowClauseOrBuilderList() {
    return windowClause_;
  }
  /**
   * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
   */
  @java.lang.Override
  public int getWindowClauseCount() {
    return windowClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getWindowClause(int index) {
    return windowClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWindowClauseOrBuilder(
      int index) {
    return windowClause_.get(index);
  }

  public static final int VALUES_LISTS_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> valuesLists_;
  /**
   * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getValuesListsList() {
    return valuesLists_;
  }
  /**
   * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getValuesListsOrBuilderList() {
    return valuesLists_;
  }
  /**
   * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
   */
  @java.lang.Override
  public int getValuesListsCount() {
    return valuesLists_.size();
  }
  /**
   * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getValuesLists(int index) {
    return valuesLists_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getValuesListsOrBuilder(
      int index) {
    return valuesLists_.get(index);
  }

  public static final int SORT_CLAUSE_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> sortClause_;
  /**
   * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getSortClauseList() {
    return sortClause_;
  }
  /**
   * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getSortClauseOrBuilderList() {
    return sortClause_;
  }
  /**
   * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
   */
  @java.lang.Override
  public int getSortClauseCount() {
    return sortClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getSortClause(int index) {
    return sortClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getSortClauseOrBuilder(
      int index) {
    return sortClause_.get(index);
  }

  public static final int LIMIT_OFFSET_FIELD_NUMBER = 12;
  private com.premiumminds.sonar.postgres.protobuf.Node limitOffset_;
  /**
   * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
   * @return Whether the limitOffset field is set.
   */
  @java.lang.Override
  public boolean hasLimitOffset() {
    return limitOffset_ != null;
  }
  /**
   * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
   * @return The limitOffset.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getLimitOffset() {
    return limitOffset_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitOffset_;
  }
  /**
   * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLimitOffsetOrBuilder() {
    return limitOffset_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitOffset_;
  }

  public static final int LIMIT_COUNT_FIELD_NUMBER = 13;
  private com.premiumminds.sonar.postgres.protobuf.Node limitCount_;
  /**
   * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
   * @return Whether the limitCount field is set.
   */
  @java.lang.Override
  public boolean hasLimitCount() {
    return limitCount_ != null;
  }
  /**
   * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
   * @return The limitCount.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getLimitCount() {
    return limitCount_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitCount_;
  }
  /**
   * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLimitCountOrBuilder() {
    return limitCount_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitCount_;
  }

  public static final int LIMIT_OPTION_FIELD_NUMBER = 14;
  private int limitOption_ = 0;
  /**
   * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
   * @return The enum numeric value on the wire for limitOption.
   */
  @java.lang.Override public int getLimitOptionValue() {
    return limitOption_;
  }
  /**
   * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
   * @return The limitOption.
   */
  @java.lang.Override public com.premiumminds.sonar.postgres.protobuf.LimitOption getLimitOption() {
    com.premiumminds.sonar.postgres.protobuf.LimitOption result = com.premiumminds.sonar.postgres.protobuf.LimitOption.forNumber(limitOption_);
    return result == null ? com.premiumminds.sonar.postgres.protobuf.LimitOption.UNRECOGNIZED : result;
  }

  public static final int LOCKING_CLAUSE_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> lockingClause_;
  /**
   * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getLockingClauseList() {
    return lockingClause_;
  }
  /**
   * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getLockingClauseOrBuilderList() {
    return lockingClause_;
  }
  /**
   * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
   */
  @java.lang.Override
  public int getLockingClauseCount() {
    return lockingClause_.size();
  }
  /**
   * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getLockingClause(int index) {
    return lockingClause_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLockingClauseOrBuilder(
      int index) {
    return lockingClause_.get(index);
  }

  public static final int WITH_CLAUSE_FIELD_NUMBER = 16;
  private com.premiumminds.sonar.postgres.protobuf.WithClause withClause_;
  /**
   * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
   * @return Whether the withClause field is set.
   */
  @java.lang.Override
  public boolean hasWithClause() {
    return withClause_ != null;
  }
  /**
   * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
   * @return The withClause.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.WithClause getWithClause() {
    return withClause_ == null ? com.premiumminds.sonar.postgres.protobuf.WithClause.getDefaultInstance() : withClause_;
  }
  /**
   * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.WithClauseOrBuilder getWithClauseOrBuilder() {
    return withClause_ == null ? com.premiumminds.sonar.postgres.protobuf.WithClause.getDefaultInstance() : withClause_;
  }

  public static final int OP_FIELD_NUMBER = 17;
  private int op_ = 0;
  /**
   * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
   * @return The enum numeric value on the wire for op.
   */
  @java.lang.Override public int getOpValue() {
    return op_;
  }
  /**
   * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
   * @return The op.
   */
  @java.lang.Override public com.premiumminds.sonar.postgres.protobuf.SetOperation getOp() {
    com.premiumminds.sonar.postgres.protobuf.SetOperation result = com.premiumminds.sonar.postgres.protobuf.SetOperation.forNumber(op_);
    return result == null ? com.premiumminds.sonar.postgres.protobuf.SetOperation.UNRECOGNIZED : result;
  }

  public static final int ALL_FIELD_NUMBER = 18;
  private boolean all_ = false;
  /**
   * <code>bool all = 18 [json_name = "all"];</code>
   * @return The all.
   */
  @java.lang.Override
  public boolean getAll() {
    return all_;
  }

  public static final int LARG_FIELD_NUMBER = 19;
  private com.premiumminds.sonar.postgres.protobuf.SelectStmt larg_;
  /**
   * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
   * @return Whether the larg field is set.
   */
  @java.lang.Override
  public boolean hasLarg() {
    return larg_ != null;
  }
  /**
   * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
   * @return The larg.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.SelectStmt getLarg() {
    return larg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : larg_;
  }
  /**
   * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder getLargOrBuilder() {
    return larg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : larg_;
  }

  public static final int RARG_FIELD_NUMBER = 20;
  private com.premiumminds.sonar.postgres.protobuf.SelectStmt rarg_;
  /**
   * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
   * @return Whether the rarg field is set.
   */
  @java.lang.Override
  public boolean hasRarg() {
    return rarg_ != null;
  }
  /**
   * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
   * @return The rarg.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.SelectStmt getRarg() {
    return rarg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : rarg_;
  }
  /**
   * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder getRargOrBuilder() {
    return rarg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : rarg_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < distinctClause_.size(); i++) {
      output.writeMessage(1, distinctClause_.get(i));
    }
    if (intoClause_ != null) {
      output.writeMessage(2, getIntoClause());
    }
    for (int i = 0; i < targetList_.size(); i++) {
      output.writeMessage(3, targetList_.get(i));
    }
    for (int i = 0; i < fromClause_.size(); i++) {
      output.writeMessage(4, fromClause_.get(i));
    }
    if (whereClause_ != null) {
      output.writeMessage(5, getWhereClause());
    }
    for (int i = 0; i < groupClause_.size(); i++) {
      output.writeMessage(6, groupClause_.get(i));
    }
    if (groupDistinct_ != false) {
      output.writeBool(7, groupDistinct_);
    }
    if (havingClause_ != null) {
      output.writeMessage(8, getHavingClause());
    }
    for (int i = 0; i < windowClause_.size(); i++) {
      output.writeMessage(9, windowClause_.get(i));
    }
    for (int i = 0; i < valuesLists_.size(); i++) {
      output.writeMessage(10, valuesLists_.get(i));
    }
    for (int i = 0; i < sortClause_.size(); i++) {
      output.writeMessage(11, sortClause_.get(i));
    }
    if (limitOffset_ != null) {
      output.writeMessage(12, getLimitOffset());
    }
    if (limitCount_ != null) {
      output.writeMessage(13, getLimitCount());
    }
    if (limitOption_ != com.premiumminds.sonar.postgres.protobuf.LimitOption.LIMIT_OPTION_UNDEFINED.getNumber()) {
      output.writeEnum(14, limitOption_);
    }
    for (int i = 0; i < lockingClause_.size(); i++) {
      output.writeMessage(15, lockingClause_.get(i));
    }
    if (withClause_ != null) {
      output.writeMessage(16, getWithClause());
    }
    if (op_ != com.premiumminds.sonar.postgres.protobuf.SetOperation.SET_OPERATION_UNDEFINED.getNumber()) {
      output.writeEnum(17, op_);
    }
    if (all_ != false) {
      output.writeBool(18, all_);
    }
    if (larg_ != null) {
      output.writeMessage(19, getLarg());
    }
    if (rarg_ != null) {
      output.writeMessage(20, getRarg());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < distinctClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, distinctClause_.get(i));
    }
    if (intoClause_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getIntoClause());
    }
    for (int i = 0; i < targetList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, targetList_.get(i));
    }
    for (int i = 0; i < fromClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, fromClause_.get(i));
    }
    if (whereClause_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getWhereClause());
    }
    for (int i = 0; i < groupClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, groupClause_.get(i));
    }
    if (groupDistinct_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, groupDistinct_);
    }
    if (havingClause_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getHavingClause());
    }
    for (int i = 0; i < windowClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, windowClause_.get(i));
    }
    for (int i = 0; i < valuesLists_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, valuesLists_.get(i));
    }
    for (int i = 0; i < sortClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, sortClause_.get(i));
    }
    if (limitOffset_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getLimitOffset());
    }
    if (limitCount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getLimitCount());
    }
    if (limitOption_ != com.premiumminds.sonar.postgres.protobuf.LimitOption.LIMIT_OPTION_UNDEFINED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(14, limitOption_);
    }
    for (int i = 0; i < lockingClause_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, lockingClause_.get(i));
    }
    if (withClause_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getWithClause());
    }
    if (op_ != com.premiumminds.sonar.postgres.protobuf.SetOperation.SET_OPERATION_UNDEFINED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(17, op_);
    }
    if (all_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(18, all_);
    }
    if (larg_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getLarg());
    }
    if (rarg_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getRarg());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.premiumminds.sonar.postgres.protobuf.SelectStmt)) {
      return super.equals(obj);
    }
    com.premiumminds.sonar.postgres.protobuf.SelectStmt other = (com.premiumminds.sonar.postgres.protobuf.SelectStmt) obj;

    if (!getDistinctClauseList()
        .equals(other.getDistinctClauseList())) return false;
    if (hasIntoClause() != other.hasIntoClause()) return false;
    if (hasIntoClause()) {
      if (!getIntoClause()
          .equals(other.getIntoClause())) return false;
    }
    if (!getTargetListList()
        .equals(other.getTargetListList())) return false;
    if (!getFromClauseList()
        .equals(other.getFromClauseList())) return false;
    if (hasWhereClause() != other.hasWhereClause()) return false;
    if (hasWhereClause()) {
      if (!getWhereClause()
          .equals(other.getWhereClause())) return false;
    }
    if (!getGroupClauseList()
        .equals(other.getGroupClauseList())) return false;
    if (getGroupDistinct()
        != other.getGroupDistinct()) return false;
    if (hasHavingClause() != other.hasHavingClause()) return false;
    if (hasHavingClause()) {
      if (!getHavingClause()
          .equals(other.getHavingClause())) return false;
    }
    if (!getWindowClauseList()
        .equals(other.getWindowClauseList())) return false;
    if (!getValuesListsList()
        .equals(other.getValuesListsList())) return false;
    if (!getSortClauseList()
        .equals(other.getSortClauseList())) return false;
    if (hasLimitOffset() != other.hasLimitOffset()) return false;
    if (hasLimitOffset()) {
      if (!getLimitOffset()
          .equals(other.getLimitOffset())) return false;
    }
    if (hasLimitCount() != other.hasLimitCount()) return false;
    if (hasLimitCount()) {
      if (!getLimitCount()
          .equals(other.getLimitCount())) return false;
    }
    if (limitOption_ != other.limitOption_) return false;
    if (!getLockingClauseList()
        .equals(other.getLockingClauseList())) return false;
    if (hasWithClause() != other.hasWithClause()) return false;
    if (hasWithClause()) {
      if (!getWithClause()
          .equals(other.getWithClause())) return false;
    }
    if (op_ != other.op_) return false;
    if (getAll()
        != other.getAll()) return false;
    if (hasLarg() != other.hasLarg()) return false;
    if (hasLarg()) {
      if (!getLarg()
          .equals(other.getLarg())) return false;
    }
    if (hasRarg() != other.hasRarg()) return false;
    if (hasRarg()) {
      if (!getRarg()
          .equals(other.getRarg())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDistinctClauseCount() > 0) {
      hash = (37 * hash) + DISTINCT_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getDistinctClauseList().hashCode();
    }
    if (hasIntoClause()) {
      hash = (37 * hash) + INTO_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getIntoClause().hashCode();
    }
    if (getTargetListCount() > 0) {
      hash = (37 * hash) + TARGET_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getTargetListList().hashCode();
    }
    if (getFromClauseCount() > 0) {
      hash = (37 * hash) + FROM_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getFromClauseList().hashCode();
    }
    if (hasWhereClause()) {
      hash = (37 * hash) + WHERE_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getWhereClause().hashCode();
    }
    if (getGroupClauseCount() > 0) {
      hash = (37 * hash) + GROUP_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getGroupClauseList().hashCode();
    }
    hash = (37 * hash) + GROUP_DISTINCT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getGroupDistinct());
    if (hasHavingClause()) {
      hash = (37 * hash) + HAVING_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getHavingClause().hashCode();
    }
    if (getWindowClauseCount() > 0) {
      hash = (37 * hash) + WINDOW_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getWindowClauseList().hashCode();
    }
    if (getValuesListsCount() > 0) {
      hash = (37 * hash) + VALUES_LISTS_FIELD_NUMBER;
      hash = (53 * hash) + getValuesListsList().hashCode();
    }
    if (getSortClauseCount() > 0) {
      hash = (37 * hash) + SORT_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getSortClauseList().hashCode();
    }
    if (hasLimitOffset()) {
      hash = (37 * hash) + LIMIT_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getLimitOffset().hashCode();
    }
    if (hasLimitCount()) {
      hash = (37 * hash) + LIMIT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getLimitCount().hashCode();
    }
    hash = (37 * hash) + LIMIT_OPTION_FIELD_NUMBER;
    hash = (53 * hash) + limitOption_;
    if (getLockingClauseCount() > 0) {
      hash = (37 * hash) + LOCKING_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLockingClauseList().hashCode();
    }
    if (hasWithClause()) {
      hash = (37 * hash) + WITH_CLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getWithClause().hashCode();
    }
    hash = (37 * hash) + OP_FIELD_NUMBER;
    hash = (53 * hash) + op_;
    hash = (37 * hash) + ALL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAll());
    if (hasLarg()) {
      hash = (37 * hash) + LARG_FIELD_NUMBER;
      hash = (53 * hash) + getLarg().hashCode();
    }
    if (hasRarg()) {
      hash = (37 * hash) + RARG_FIELD_NUMBER;
      hash = (53 * hash) + getRarg().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.premiumminds.sonar.postgres.protobuf.SelectStmt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pg_query.SelectStmt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pg_query.SelectStmt)
      com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_SelectStmt_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_SelectStmt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.premiumminds.sonar.postgres.protobuf.SelectStmt.class, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder.class);
    }

    // Construct using com.premiumminds.sonar.postgres.protobuf.SelectStmt.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (distinctClauseBuilder_ == null) {
        distinctClause_ = java.util.Collections.emptyList();
      } else {
        distinctClause_ = null;
        distinctClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      intoClause_ = null;
      if (intoClauseBuilder_ != null) {
        intoClauseBuilder_.dispose();
        intoClauseBuilder_ = null;
      }
      if (targetListBuilder_ == null) {
        targetList_ = java.util.Collections.emptyList();
      } else {
        targetList_ = null;
        targetListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (fromClauseBuilder_ == null) {
        fromClause_ = java.util.Collections.emptyList();
      } else {
        fromClause_ = null;
        fromClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      whereClause_ = null;
      if (whereClauseBuilder_ != null) {
        whereClauseBuilder_.dispose();
        whereClauseBuilder_ = null;
      }
      if (groupClauseBuilder_ == null) {
        groupClause_ = java.util.Collections.emptyList();
      } else {
        groupClause_ = null;
        groupClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      groupDistinct_ = false;
      havingClause_ = null;
      if (havingClauseBuilder_ != null) {
        havingClauseBuilder_.dispose();
        havingClauseBuilder_ = null;
      }
      if (windowClauseBuilder_ == null) {
        windowClause_ = java.util.Collections.emptyList();
      } else {
        windowClause_ = null;
        windowClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (valuesListsBuilder_ == null) {
        valuesLists_ = java.util.Collections.emptyList();
      } else {
        valuesLists_ = null;
        valuesListsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (sortClauseBuilder_ == null) {
        sortClause_ = java.util.Collections.emptyList();
      } else {
        sortClause_ = null;
        sortClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      limitOffset_ = null;
      if (limitOffsetBuilder_ != null) {
        limitOffsetBuilder_.dispose();
        limitOffsetBuilder_ = null;
      }
      limitCount_ = null;
      if (limitCountBuilder_ != null) {
        limitCountBuilder_.dispose();
        limitCountBuilder_ = null;
      }
      limitOption_ = 0;
      if (lockingClauseBuilder_ == null) {
        lockingClause_ = java.util.Collections.emptyList();
      } else {
        lockingClause_ = null;
        lockingClauseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      withClause_ = null;
      if (withClauseBuilder_ != null) {
        withClauseBuilder_.dispose();
        withClauseBuilder_ = null;
      }
      op_ = 0;
      all_ = false;
      larg_ = null;
      if (largBuilder_ != null) {
        largBuilder_.dispose();
        largBuilder_ = null;
      }
      rarg_ = null;
      if (rargBuilder_ != null) {
        rargBuilder_.dispose();
        rargBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_SelectStmt_descriptor;
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt getDefaultInstanceForType() {
      return com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance();
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt build() {
      com.premiumminds.sonar.postgres.protobuf.SelectStmt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt buildPartial() {
      com.premiumminds.sonar.postgres.protobuf.SelectStmt result = new com.premiumminds.sonar.postgres.protobuf.SelectStmt(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.premiumminds.sonar.postgres.protobuf.SelectStmt result) {
      if (distinctClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          distinctClause_ = java.util.Collections.unmodifiableList(distinctClause_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.distinctClause_ = distinctClause_;
      } else {
        result.distinctClause_ = distinctClauseBuilder_.build();
      }
      if (targetListBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          targetList_ = java.util.Collections.unmodifiableList(targetList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.targetList_ = targetList_;
      } else {
        result.targetList_ = targetListBuilder_.build();
      }
      if (fromClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          fromClause_ = java.util.Collections.unmodifiableList(fromClause_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.fromClause_ = fromClause_;
      } else {
        result.fromClause_ = fromClauseBuilder_.build();
      }
      if (groupClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          groupClause_ = java.util.Collections.unmodifiableList(groupClause_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.groupClause_ = groupClause_;
      } else {
        result.groupClause_ = groupClauseBuilder_.build();
      }
      if (windowClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          windowClause_ = java.util.Collections.unmodifiableList(windowClause_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.windowClause_ = windowClause_;
      } else {
        result.windowClause_ = windowClauseBuilder_.build();
      }
      if (valuesListsBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          valuesLists_ = java.util.Collections.unmodifiableList(valuesLists_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.valuesLists_ = valuesLists_;
      } else {
        result.valuesLists_ = valuesListsBuilder_.build();
      }
      if (sortClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          sortClause_ = java.util.Collections.unmodifiableList(sortClause_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sortClause_ = sortClause_;
      } else {
        result.sortClause_ = sortClauseBuilder_.build();
      }
      if (lockingClauseBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)) {
          lockingClause_ = java.util.Collections.unmodifiableList(lockingClause_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.lockingClause_ = lockingClause_;
      } else {
        result.lockingClause_ = lockingClauseBuilder_.build();
      }
    }

    private void buildPartial0(com.premiumminds.sonar.postgres.protobuf.SelectStmt result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.intoClause_ = intoClauseBuilder_ == null
            ? intoClause_
            : intoClauseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.whereClause_ = whereClauseBuilder_ == null
            ? whereClause_
            : whereClauseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.groupDistinct_ = groupDistinct_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.havingClause_ = havingClauseBuilder_ == null
            ? havingClause_
            : havingClauseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.limitOffset_ = limitOffsetBuilder_ == null
            ? limitOffset_
            : limitOffsetBuilder_.build();
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.limitCount_ = limitCountBuilder_ == null
            ? limitCount_
            : limitCountBuilder_.build();
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.limitOption_ = limitOption_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.withClause_ = withClauseBuilder_ == null
            ? withClause_
            : withClauseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.op_ = op_;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.all_ = all_;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.larg_ = largBuilder_ == null
            ? larg_
            : largBuilder_.build();
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.rarg_ = rargBuilder_ == null
            ? rarg_
            : rargBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.premiumminds.sonar.postgres.protobuf.SelectStmt) {
        return mergeFrom((com.premiumminds.sonar.postgres.protobuf.SelectStmt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.premiumminds.sonar.postgres.protobuf.SelectStmt other) {
      if (other == com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance()) return this;
      if (distinctClauseBuilder_ == null) {
        if (!other.distinctClause_.isEmpty()) {
          if (distinctClause_.isEmpty()) {
            distinctClause_ = other.distinctClause_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDistinctClauseIsMutable();
            distinctClause_.addAll(other.distinctClause_);
          }
          onChanged();
        }
      } else {
        if (!other.distinctClause_.isEmpty()) {
          if (distinctClauseBuilder_.isEmpty()) {
            distinctClauseBuilder_.dispose();
            distinctClauseBuilder_ = null;
            distinctClause_ = other.distinctClause_;
            bitField0_ = (bitField0_ & ~0x00000001);
            distinctClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDistinctClauseFieldBuilder() : null;
          } else {
            distinctClauseBuilder_.addAllMessages(other.distinctClause_);
          }
        }
      }
      if (other.hasIntoClause()) {
        mergeIntoClause(other.getIntoClause());
      }
      if (targetListBuilder_ == null) {
        if (!other.targetList_.isEmpty()) {
          if (targetList_.isEmpty()) {
            targetList_ = other.targetList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTargetListIsMutable();
            targetList_.addAll(other.targetList_);
          }
          onChanged();
        }
      } else {
        if (!other.targetList_.isEmpty()) {
          if (targetListBuilder_.isEmpty()) {
            targetListBuilder_.dispose();
            targetListBuilder_ = null;
            targetList_ = other.targetList_;
            bitField0_ = (bitField0_ & ~0x00000004);
            targetListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTargetListFieldBuilder() : null;
          } else {
            targetListBuilder_.addAllMessages(other.targetList_);
          }
        }
      }
      if (fromClauseBuilder_ == null) {
        if (!other.fromClause_.isEmpty()) {
          if (fromClause_.isEmpty()) {
            fromClause_ = other.fromClause_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFromClauseIsMutable();
            fromClause_.addAll(other.fromClause_);
          }
          onChanged();
        }
      } else {
        if (!other.fromClause_.isEmpty()) {
          if (fromClauseBuilder_.isEmpty()) {
            fromClauseBuilder_.dispose();
            fromClauseBuilder_ = null;
            fromClause_ = other.fromClause_;
            bitField0_ = (bitField0_ & ~0x00000008);
            fromClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFromClauseFieldBuilder() : null;
          } else {
            fromClauseBuilder_.addAllMessages(other.fromClause_);
          }
        }
      }
      if (other.hasWhereClause()) {
        mergeWhereClause(other.getWhereClause());
      }
      if (groupClauseBuilder_ == null) {
        if (!other.groupClause_.isEmpty()) {
          if (groupClause_.isEmpty()) {
            groupClause_ = other.groupClause_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureGroupClauseIsMutable();
            groupClause_.addAll(other.groupClause_);
          }
          onChanged();
        }
      } else {
        if (!other.groupClause_.isEmpty()) {
          if (groupClauseBuilder_.isEmpty()) {
            groupClauseBuilder_.dispose();
            groupClauseBuilder_ = null;
            groupClause_ = other.groupClause_;
            bitField0_ = (bitField0_ & ~0x00000020);
            groupClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGroupClauseFieldBuilder() : null;
          } else {
            groupClauseBuilder_.addAllMessages(other.groupClause_);
          }
        }
      }
      if (other.getGroupDistinct() != false) {
        setGroupDistinct(other.getGroupDistinct());
      }
      if (other.hasHavingClause()) {
        mergeHavingClause(other.getHavingClause());
      }
      if (windowClauseBuilder_ == null) {
        if (!other.windowClause_.isEmpty()) {
          if (windowClause_.isEmpty()) {
            windowClause_ = other.windowClause_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureWindowClauseIsMutable();
            windowClause_.addAll(other.windowClause_);
          }
          onChanged();
        }
      } else {
        if (!other.windowClause_.isEmpty()) {
          if (windowClauseBuilder_.isEmpty()) {
            windowClauseBuilder_.dispose();
            windowClauseBuilder_ = null;
            windowClause_ = other.windowClause_;
            bitField0_ = (bitField0_ & ~0x00000100);
            windowClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWindowClauseFieldBuilder() : null;
          } else {
            windowClauseBuilder_.addAllMessages(other.windowClause_);
          }
        }
      }
      if (valuesListsBuilder_ == null) {
        if (!other.valuesLists_.isEmpty()) {
          if (valuesLists_.isEmpty()) {
            valuesLists_ = other.valuesLists_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureValuesListsIsMutable();
            valuesLists_.addAll(other.valuesLists_);
          }
          onChanged();
        }
      } else {
        if (!other.valuesLists_.isEmpty()) {
          if (valuesListsBuilder_.isEmpty()) {
            valuesListsBuilder_.dispose();
            valuesListsBuilder_ = null;
            valuesLists_ = other.valuesLists_;
            bitField0_ = (bitField0_ & ~0x00000200);
            valuesListsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValuesListsFieldBuilder() : null;
          } else {
            valuesListsBuilder_.addAllMessages(other.valuesLists_);
          }
        }
      }
      if (sortClauseBuilder_ == null) {
        if (!other.sortClause_.isEmpty()) {
          if (sortClause_.isEmpty()) {
            sortClause_ = other.sortClause_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSortClauseIsMutable();
            sortClause_.addAll(other.sortClause_);
          }
          onChanged();
        }
      } else {
        if (!other.sortClause_.isEmpty()) {
          if (sortClauseBuilder_.isEmpty()) {
            sortClauseBuilder_.dispose();
            sortClauseBuilder_ = null;
            sortClause_ = other.sortClause_;
            bitField0_ = (bitField0_ & ~0x00000400);
            sortClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSortClauseFieldBuilder() : null;
          } else {
            sortClauseBuilder_.addAllMessages(other.sortClause_);
          }
        }
      }
      if (other.hasLimitOffset()) {
        mergeLimitOffset(other.getLimitOffset());
      }
      if (other.hasLimitCount()) {
        mergeLimitCount(other.getLimitCount());
      }
      if (other.limitOption_ != 0) {
        setLimitOptionValue(other.getLimitOptionValue());
      }
      if (lockingClauseBuilder_ == null) {
        if (!other.lockingClause_.isEmpty()) {
          if (lockingClause_.isEmpty()) {
            lockingClause_ = other.lockingClause_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureLockingClauseIsMutable();
            lockingClause_.addAll(other.lockingClause_);
          }
          onChanged();
        }
      } else {
        if (!other.lockingClause_.isEmpty()) {
          if (lockingClauseBuilder_.isEmpty()) {
            lockingClauseBuilder_.dispose();
            lockingClauseBuilder_ = null;
            lockingClause_ = other.lockingClause_;
            bitField0_ = (bitField0_ & ~0x00004000);
            lockingClauseBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLockingClauseFieldBuilder() : null;
          } else {
            lockingClauseBuilder_.addAllMessages(other.lockingClause_);
          }
        }
      }
      if (other.hasWithClause()) {
        mergeWithClause(other.getWithClause());
      }
      if (other.op_ != 0) {
        setOpValue(other.getOpValue());
      }
      if (other.getAll() != false) {
        setAll(other.getAll());
      }
      if (other.hasLarg()) {
        mergeLarg(other.getLarg());
      }
      if (other.hasRarg()) {
        mergeRarg(other.getRarg());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (distinctClauseBuilder_ == null) {
                ensureDistinctClauseIsMutable();
                distinctClause_.add(m);
              } else {
                distinctClauseBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getIntoClauseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (targetListBuilder_ == null) {
                ensureTargetListIsMutable();
                targetList_.add(m);
              } else {
                targetListBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (fromClauseBuilder_ == null) {
                ensureFromClauseIsMutable();
                fromClause_.add(m);
              } else {
                fromClauseBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getWhereClauseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (groupClauseBuilder_ == null) {
                ensureGroupClauseIsMutable();
                groupClause_.add(m);
              } else {
                groupClauseBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 56: {
              groupDistinct_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              input.readMessage(
                  getHavingClauseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (windowClauseBuilder_ == null) {
                ensureWindowClauseIsMutable();
                windowClause_.add(m);
              } else {
                windowClauseBuilder_.addMessage(m);
              }
              break;
            } // case 74
            case 82: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (valuesListsBuilder_ == null) {
                ensureValuesListsIsMutable();
                valuesLists_.add(m);
              } else {
                valuesListsBuilder_.addMessage(m);
              }
              break;
            } // case 82
            case 90: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (sortClauseBuilder_ == null) {
                ensureSortClauseIsMutable();
                sortClause_.add(m);
              } else {
                sortClauseBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getLimitOffsetFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getLimitCountFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 106
            case 112: {
              limitOption_ = input.readEnum();
              bitField0_ |= 0x00002000;
              break;
            } // case 112
            case 122: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (lockingClauseBuilder_ == null) {
                ensureLockingClauseIsMutable();
                lockingClause_.add(m);
              } else {
                lockingClauseBuilder_.addMessage(m);
              }
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getWithClauseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00008000;
              break;
            } // case 130
            case 136: {
              op_ = input.readEnum();
              bitField0_ |= 0x00010000;
              break;
            } // case 136
            case 144: {
              all_ = input.readBool();
              bitField0_ |= 0x00020000;
              break;
            } // case 144
            case 154: {
              input.readMessage(
                  getLargFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00040000;
              break;
            } // case 154
            case 162: {
              input.readMessage(
                  getRargFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00080000;
              break;
            } // case 162
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> distinctClause_ =
      java.util.Collections.emptyList();
    private void ensureDistinctClauseIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        distinctClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(distinctClause_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> distinctClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getDistinctClauseList() {
      if (distinctClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(distinctClause_);
      } else {
        return distinctClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public int getDistinctClauseCount() {
      if (distinctClauseBuilder_ == null) {
        return distinctClause_.size();
      } else {
        return distinctClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getDistinctClause(int index) {
      if (distinctClauseBuilder_ == null) {
        return distinctClause_.get(index);
      } else {
        return distinctClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder setDistinctClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (distinctClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistinctClauseIsMutable();
        distinctClause_.set(index, value);
        onChanged();
      } else {
        distinctClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder setDistinctClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (distinctClauseBuilder_ == null) {
        ensureDistinctClauseIsMutable();
        distinctClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        distinctClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder addDistinctClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (distinctClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistinctClauseIsMutable();
        distinctClause_.add(value);
        onChanged();
      } else {
        distinctClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder addDistinctClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (distinctClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistinctClauseIsMutable();
        distinctClause_.add(index, value);
        onChanged();
      } else {
        distinctClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder addDistinctClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (distinctClauseBuilder_ == null) {
        ensureDistinctClauseIsMutable();
        distinctClause_.add(builderForValue.build());
        onChanged();
      } else {
        distinctClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder addDistinctClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (distinctClauseBuilder_ == null) {
        ensureDistinctClauseIsMutable();
        distinctClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        distinctClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder addAllDistinctClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (distinctClauseBuilder_ == null) {
        ensureDistinctClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, distinctClause_);
        onChanged();
      } else {
        distinctClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder clearDistinctClause() {
      if (distinctClauseBuilder_ == null) {
        distinctClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        distinctClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public Builder removeDistinctClause(int index) {
      if (distinctClauseBuilder_ == null) {
        ensureDistinctClauseIsMutable();
        distinctClause_.remove(index);
        onChanged();
      } else {
        distinctClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getDistinctClauseBuilder(
        int index) {
      return getDistinctClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getDistinctClauseOrBuilder(
        int index) {
      if (distinctClauseBuilder_ == null) {
        return distinctClause_.get(index);  } else {
        return distinctClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getDistinctClauseOrBuilderList() {
      if (distinctClauseBuilder_ != null) {
        return distinctClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(distinctClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addDistinctClauseBuilder() {
      return getDistinctClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addDistinctClauseBuilder(
        int index) {
      return getDistinctClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node distinct_clause = 1 [json_name = "distinctClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getDistinctClauseBuilderList() {
      return getDistinctClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getDistinctClauseFieldBuilder() {
      if (distinctClauseBuilder_ == null) {
        distinctClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                distinctClause_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        distinctClause_ = null;
      }
      return distinctClauseBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.IntoClause intoClause_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.IntoClause, com.premiumminds.sonar.postgres.protobuf.IntoClause.Builder, com.premiumminds.sonar.postgres.protobuf.IntoClauseOrBuilder> intoClauseBuilder_;
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     * @return Whether the intoClause field is set.
     */
    public boolean hasIntoClause() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     * @return The intoClause.
     */
    public com.premiumminds.sonar.postgres.protobuf.IntoClause getIntoClause() {
      if (intoClauseBuilder_ == null) {
        return intoClause_ == null ? com.premiumminds.sonar.postgres.protobuf.IntoClause.getDefaultInstance() : intoClause_;
      } else {
        return intoClauseBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public Builder setIntoClause(com.premiumminds.sonar.postgres.protobuf.IntoClause value) {
      if (intoClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        intoClause_ = value;
      } else {
        intoClauseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public Builder setIntoClause(
        com.premiumminds.sonar.postgres.protobuf.IntoClause.Builder builderForValue) {
      if (intoClauseBuilder_ == null) {
        intoClause_ = builderForValue.build();
      } else {
        intoClauseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public Builder mergeIntoClause(com.premiumminds.sonar.postgres.protobuf.IntoClause value) {
      if (intoClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          intoClause_ != null &&
          intoClause_ != com.premiumminds.sonar.postgres.protobuf.IntoClause.getDefaultInstance()) {
          getIntoClauseBuilder().mergeFrom(value);
        } else {
          intoClause_ = value;
        }
      } else {
        intoClauseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public Builder clearIntoClause() {
      bitField0_ = (bitField0_ & ~0x00000002);
      intoClause_ = null;
      if (intoClauseBuilder_ != null) {
        intoClauseBuilder_.dispose();
        intoClauseBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.IntoClause.Builder getIntoClauseBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getIntoClauseFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.IntoClauseOrBuilder getIntoClauseOrBuilder() {
      if (intoClauseBuilder_ != null) {
        return intoClauseBuilder_.getMessageOrBuilder();
      } else {
        return intoClause_ == null ?
            com.premiumminds.sonar.postgres.protobuf.IntoClause.getDefaultInstance() : intoClause_;
      }
    }
    /**
     * <code>.pg_query.IntoClause into_clause = 2 [json_name = "intoClause"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.IntoClause, com.premiumminds.sonar.postgres.protobuf.IntoClause.Builder, com.premiumminds.sonar.postgres.protobuf.IntoClauseOrBuilder> 
        getIntoClauseFieldBuilder() {
      if (intoClauseBuilder_ == null) {
        intoClauseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.IntoClause, com.premiumminds.sonar.postgres.protobuf.IntoClause.Builder, com.premiumminds.sonar.postgres.protobuf.IntoClauseOrBuilder>(
                getIntoClause(),
                getParentForChildren(),
                isClean());
        intoClause_ = null;
      }
      return intoClauseBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> targetList_ =
      java.util.Collections.emptyList();
    private void ensureTargetListIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        targetList_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(targetList_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> targetListBuilder_;

    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getTargetListList() {
      if (targetListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(targetList_);
      } else {
        return targetListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public int getTargetListCount() {
      if (targetListBuilder_ == null) {
        return targetList_.size();
      } else {
        return targetListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getTargetList(int index) {
      if (targetListBuilder_ == null) {
        return targetList_.get(index);
      } else {
        return targetListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder setTargetList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (targetListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetListIsMutable();
        targetList_.set(index, value);
        onChanged();
      } else {
        targetListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder setTargetList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (targetListBuilder_ == null) {
        ensureTargetListIsMutable();
        targetList_.set(index, builderForValue.build());
        onChanged();
      } else {
        targetListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder addTargetList(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (targetListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetListIsMutable();
        targetList_.add(value);
        onChanged();
      } else {
        targetListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder addTargetList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (targetListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetListIsMutable();
        targetList_.add(index, value);
        onChanged();
      } else {
        targetListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder addTargetList(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (targetListBuilder_ == null) {
        ensureTargetListIsMutable();
        targetList_.add(builderForValue.build());
        onChanged();
      } else {
        targetListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder addTargetList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (targetListBuilder_ == null) {
        ensureTargetListIsMutable();
        targetList_.add(index, builderForValue.build());
        onChanged();
      } else {
        targetListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder addAllTargetList(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (targetListBuilder_ == null) {
        ensureTargetListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, targetList_);
        onChanged();
      } else {
        targetListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder clearTargetList() {
      if (targetListBuilder_ == null) {
        targetList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        targetListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public Builder removeTargetList(int index) {
      if (targetListBuilder_ == null) {
        ensureTargetListIsMutable();
        targetList_.remove(index);
        onChanged();
      } else {
        targetListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getTargetListBuilder(
        int index) {
      return getTargetListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getTargetListOrBuilder(
        int index) {
      if (targetListBuilder_ == null) {
        return targetList_.get(index);  } else {
        return targetListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getTargetListOrBuilderList() {
      if (targetListBuilder_ != null) {
        return targetListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(targetList_);
      }
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addTargetListBuilder() {
      return getTargetListFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addTargetListBuilder(
        int index) {
      return getTargetListFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node target_list = 3 [json_name = "targetList"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getTargetListBuilderList() {
      return getTargetListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getTargetListFieldBuilder() {
      if (targetListBuilder_ == null) {
        targetListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                targetList_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        targetList_ = null;
      }
      return targetListBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> fromClause_ =
      java.util.Collections.emptyList();
    private void ensureFromClauseIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        fromClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(fromClause_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> fromClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getFromClauseList() {
      if (fromClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fromClause_);
      } else {
        return fromClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public int getFromClauseCount() {
      if (fromClauseBuilder_ == null) {
        return fromClause_.size();
      } else {
        return fromClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getFromClause(int index) {
      if (fromClauseBuilder_ == null) {
        return fromClause_.get(index);
      } else {
        return fromClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder setFromClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (fromClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFromClauseIsMutable();
        fromClause_.set(index, value);
        onChanged();
      } else {
        fromClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder setFromClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (fromClauseBuilder_ == null) {
        ensureFromClauseIsMutable();
        fromClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        fromClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder addFromClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (fromClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFromClauseIsMutable();
        fromClause_.add(value);
        onChanged();
      } else {
        fromClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder addFromClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (fromClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFromClauseIsMutable();
        fromClause_.add(index, value);
        onChanged();
      } else {
        fromClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder addFromClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (fromClauseBuilder_ == null) {
        ensureFromClauseIsMutable();
        fromClause_.add(builderForValue.build());
        onChanged();
      } else {
        fromClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder addFromClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (fromClauseBuilder_ == null) {
        ensureFromClauseIsMutable();
        fromClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        fromClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder addAllFromClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (fromClauseBuilder_ == null) {
        ensureFromClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fromClause_);
        onChanged();
      } else {
        fromClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder clearFromClause() {
      if (fromClauseBuilder_ == null) {
        fromClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        fromClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public Builder removeFromClause(int index) {
      if (fromClauseBuilder_ == null) {
        ensureFromClauseIsMutable();
        fromClause_.remove(index);
        onChanged();
      } else {
        fromClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getFromClauseBuilder(
        int index) {
      return getFromClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFromClauseOrBuilder(
        int index) {
      if (fromClauseBuilder_ == null) {
        return fromClause_.get(index);  } else {
        return fromClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getFromClauseOrBuilderList() {
      if (fromClauseBuilder_ != null) {
        return fromClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fromClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addFromClauseBuilder() {
      return getFromClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addFromClauseBuilder(
        int index) {
      return getFromClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node from_clause = 4 [json_name = "fromClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getFromClauseBuilderList() {
      return getFromClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getFromClauseFieldBuilder() {
      if (fromClauseBuilder_ == null) {
        fromClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                fromClause_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        fromClause_ = null;
      }
      return fromClauseBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node whereClause_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> whereClauseBuilder_;
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     * @return Whether the whereClause field is set.
     */
    public boolean hasWhereClause() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     * @return The whereClause.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getWhereClause() {
      if (whereClauseBuilder_ == null) {
        return whereClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : whereClause_;
      } else {
        return whereClauseBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public Builder setWhereClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (whereClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        whereClause_ = value;
      } else {
        whereClauseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public Builder setWhereClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (whereClauseBuilder_ == null) {
        whereClause_ = builderForValue.build();
      } else {
        whereClauseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public Builder mergeWhereClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (whereClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          whereClause_ != null &&
          whereClause_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getWhereClauseBuilder().mergeFrom(value);
        } else {
          whereClause_ = value;
        }
      } else {
        whereClauseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public Builder clearWhereClause() {
      bitField0_ = (bitField0_ & ~0x00000010);
      whereClause_ = null;
      if (whereClauseBuilder_ != null) {
        whereClauseBuilder_.dispose();
        whereClauseBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getWhereClauseBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getWhereClauseFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWhereClauseOrBuilder() {
      if (whereClauseBuilder_ != null) {
        return whereClauseBuilder_.getMessageOrBuilder();
      } else {
        return whereClause_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : whereClause_;
      }
    }
    /**
     * <code>.pg_query.Node where_clause = 5 [json_name = "whereClause"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getWhereClauseFieldBuilder() {
      if (whereClauseBuilder_ == null) {
        whereClauseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getWhereClause(),
                getParentForChildren(),
                isClean());
        whereClause_ = null;
      }
      return whereClauseBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> groupClause_ =
      java.util.Collections.emptyList();
    private void ensureGroupClauseIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        groupClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(groupClause_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> groupClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getGroupClauseList() {
      if (groupClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(groupClause_);
      } else {
        return groupClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public int getGroupClauseCount() {
      if (groupClauseBuilder_ == null) {
        return groupClause_.size();
      } else {
        return groupClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getGroupClause(int index) {
      if (groupClauseBuilder_ == null) {
        return groupClause_.get(index);
      } else {
        return groupClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder setGroupClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (groupClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupClauseIsMutable();
        groupClause_.set(index, value);
        onChanged();
      } else {
        groupClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder setGroupClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (groupClauseBuilder_ == null) {
        ensureGroupClauseIsMutable();
        groupClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        groupClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder addGroupClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (groupClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupClauseIsMutable();
        groupClause_.add(value);
        onChanged();
      } else {
        groupClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder addGroupClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (groupClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupClauseIsMutable();
        groupClause_.add(index, value);
        onChanged();
      } else {
        groupClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder addGroupClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (groupClauseBuilder_ == null) {
        ensureGroupClauseIsMutable();
        groupClause_.add(builderForValue.build());
        onChanged();
      } else {
        groupClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder addGroupClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (groupClauseBuilder_ == null) {
        ensureGroupClauseIsMutable();
        groupClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        groupClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder addAllGroupClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (groupClauseBuilder_ == null) {
        ensureGroupClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, groupClause_);
        onChanged();
      } else {
        groupClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder clearGroupClause() {
      if (groupClauseBuilder_ == null) {
        groupClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        groupClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public Builder removeGroupClause(int index) {
      if (groupClauseBuilder_ == null) {
        ensureGroupClauseIsMutable();
        groupClause_.remove(index);
        onChanged();
      } else {
        groupClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getGroupClauseBuilder(
        int index) {
      return getGroupClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getGroupClauseOrBuilder(
        int index) {
      if (groupClauseBuilder_ == null) {
        return groupClause_.get(index);  } else {
        return groupClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getGroupClauseOrBuilderList() {
      if (groupClauseBuilder_ != null) {
        return groupClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(groupClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addGroupClauseBuilder() {
      return getGroupClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addGroupClauseBuilder(
        int index) {
      return getGroupClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node group_clause = 6 [json_name = "groupClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getGroupClauseBuilderList() {
      return getGroupClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getGroupClauseFieldBuilder() {
      if (groupClauseBuilder_ == null) {
        groupClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                groupClause_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        groupClause_ = null;
      }
      return groupClauseBuilder_;
    }

    private boolean groupDistinct_ ;
    /**
     * <code>bool group_distinct = 7 [json_name = "groupDistinct"];</code>
     * @return The groupDistinct.
     */
    @java.lang.Override
    public boolean getGroupDistinct() {
      return groupDistinct_;
    }
    /**
     * <code>bool group_distinct = 7 [json_name = "groupDistinct"];</code>
     * @param value The groupDistinct to set.
     * @return This builder for chaining.
     */
    public Builder setGroupDistinct(boolean value) {
      
      groupDistinct_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>bool group_distinct = 7 [json_name = "groupDistinct"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupDistinct() {
      bitField0_ = (bitField0_ & ~0x00000040);
      groupDistinct_ = false;
      onChanged();
      return this;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node havingClause_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> havingClauseBuilder_;
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     * @return Whether the havingClause field is set.
     */
    public boolean hasHavingClause() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     * @return The havingClause.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getHavingClause() {
      if (havingClauseBuilder_ == null) {
        return havingClause_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : havingClause_;
      } else {
        return havingClauseBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public Builder setHavingClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (havingClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        havingClause_ = value;
      } else {
        havingClauseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public Builder setHavingClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (havingClauseBuilder_ == null) {
        havingClause_ = builderForValue.build();
      } else {
        havingClauseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public Builder mergeHavingClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (havingClauseBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          havingClause_ != null &&
          havingClause_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getHavingClauseBuilder().mergeFrom(value);
        } else {
          havingClause_ = value;
        }
      } else {
        havingClauseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public Builder clearHavingClause() {
      bitField0_ = (bitField0_ & ~0x00000080);
      havingClause_ = null;
      if (havingClauseBuilder_ != null) {
        havingClauseBuilder_.dispose();
        havingClauseBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getHavingClauseBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getHavingClauseFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getHavingClauseOrBuilder() {
      if (havingClauseBuilder_ != null) {
        return havingClauseBuilder_.getMessageOrBuilder();
      } else {
        return havingClause_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : havingClause_;
      }
    }
    /**
     * <code>.pg_query.Node having_clause = 8 [json_name = "havingClause"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getHavingClauseFieldBuilder() {
      if (havingClauseBuilder_ == null) {
        havingClauseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getHavingClause(),
                getParentForChildren(),
                isClean());
        havingClause_ = null;
      }
      return havingClauseBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> windowClause_ =
      java.util.Collections.emptyList();
    private void ensureWindowClauseIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        windowClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(windowClause_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> windowClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getWindowClauseList() {
      if (windowClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(windowClause_);
      } else {
        return windowClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public int getWindowClauseCount() {
      if (windowClauseBuilder_ == null) {
        return windowClause_.size();
      } else {
        return windowClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getWindowClause(int index) {
      if (windowClauseBuilder_ == null) {
        return windowClause_.get(index);
      } else {
        return windowClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder setWindowClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (windowClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowClauseIsMutable();
        windowClause_.set(index, value);
        onChanged();
      } else {
        windowClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder setWindowClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (windowClauseBuilder_ == null) {
        ensureWindowClauseIsMutable();
        windowClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        windowClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder addWindowClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (windowClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowClauseIsMutable();
        windowClause_.add(value);
        onChanged();
      } else {
        windowClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder addWindowClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (windowClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowClauseIsMutable();
        windowClause_.add(index, value);
        onChanged();
      } else {
        windowClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder addWindowClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (windowClauseBuilder_ == null) {
        ensureWindowClauseIsMutable();
        windowClause_.add(builderForValue.build());
        onChanged();
      } else {
        windowClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder addWindowClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (windowClauseBuilder_ == null) {
        ensureWindowClauseIsMutable();
        windowClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        windowClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder addAllWindowClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (windowClauseBuilder_ == null) {
        ensureWindowClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, windowClause_);
        onChanged();
      } else {
        windowClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder clearWindowClause() {
      if (windowClauseBuilder_ == null) {
        windowClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        windowClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public Builder removeWindowClause(int index) {
      if (windowClauseBuilder_ == null) {
        ensureWindowClauseIsMutable();
        windowClause_.remove(index);
        onChanged();
      } else {
        windowClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getWindowClauseBuilder(
        int index) {
      return getWindowClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWindowClauseOrBuilder(
        int index) {
      if (windowClauseBuilder_ == null) {
        return windowClause_.get(index);  } else {
        return windowClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getWindowClauseOrBuilderList() {
      if (windowClauseBuilder_ != null) {
        return windowClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(windowClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addWindowClauseBuilder() {
      return getWindowClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addWindowClauseBuilder(
        int index) {
      return getWindowClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node window_clause = 9 [json_name = "windowClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getWindowClauseBuilderList() {
      return getWindowClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getWindowClauseFieldBuilder() {
      if (windowClauseBuilder_ == null) {
        windowClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                windowClause_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        windowClause_ = null;
      }
      return windowClauseBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> valuesLists_ =
      java.util.Collections.emptyList();
    private void ensureValuesListsIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        valuesLists_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(valuesLists_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> valuesListsBuilder_;

    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getValuesListsList() {
      if (valuesListsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(valuesLists_);
      } else {
        return valuesListsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public int getValuesListsCount() {
      if (valuesListsBuilder_ == null) {
        return valuesLists_.size();
      } else {
        return valuesListsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getValuesLists(int index) {
      if (valuesListsBuilder_ == null) {
        return valuesLists_.get(index);
      } else {
        return valuesListsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder setValuesLists(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (valuesListsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesListsIsMutable();
        valuesLists_.set(index, value);
        onChanged();
      } else {
        valuesListsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder setValuesLists(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (valuesListsBuilder_ == null) {
        ensureValuesListsIsMutable();
        valuesLists_.set(index, builderForValue.build());
        onChanged();
      } else {
        valuesListsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder addValuesLists(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (valuesListsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesListsIsMutable();
        valuesLists_.add(value);
        onChanged();
      } else {
        valuesListsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder addValuesLists(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (valuesListsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesListsIsMutable();
        valuesLists_.add(index, value);
        onChanged();
      } else {
        valuesListsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder addValuesLists(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (valuesListsBuilder_ == null) {
        ensureValuesListsIsMutable();
        valuesLists_.add(builderForValue.build());
        onChanged();
      } else {
        valuesListsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder addValuesLists(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (valuesListsBuilder_ == null) {
        ensureValuesListsIsMutable();
        valuesLists_.add(index, builderForValue.build());
        onChanged();
      } else {
        valuesListsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder addAllValuesLists(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (valuesListsBuilder_ == null) {
        ensureValuesListsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valuesLists_);
        onChanged();
      } else {
        valuesListsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder clearValuesLists() {
      if (valuesListsBuilder_ == null) {
        valuesLists_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        valuesListsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public Builder removeValuesLists(int index) {
      if (valuesListsBuilder_ == null) {
        ensureValuesListsIsMutable();
        valuesLists_.remove(index);
        onChanged();
      } else {
        valuesListsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getValuesListsBuilder(
        int index) {
      return getValuesListsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getValuesListsOrBuilder(
        int index) {
      if (valuesListsBuilder_ == null) {
        return valuesLists_.get(index);  } else {
        return valuesListsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getValuesListsOrBuilderList() {
      if (valuesListsBuilder_ != null) {
        return valuesListsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(valuesLists_);
      }
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addValuesListsBuilder() {
      return getValuesListsFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addValuesListsBuilder(
        int index) {
      return getValuesListsFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node values_lists = 10 [json_name = "valuesLists"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getValuesListsBuilderList() {
      return getValuesListsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getValuesListsFieldBuilder() {
      if (valuesListsBuilder_ == null) {
        valuesListsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                valuesLists_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        valuesLists_ = null;
      }
      return valuesListsBuilder_;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> sortClause_ =
      java.util.Collections.emptyList();
    private void ensureSortClauseIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        sortClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(sortClause_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> sortClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getSortClauseList() {
      if (sortClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sortClause_);
      } else {
        return sortClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public int getSortClauseCount() {
      if (sortClauseBuilder_ == null) {
        return sortClause_.size();
      } else {
        return sortClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getSortClause(int index) {
      if (sortClauseBuilder_ == null) {
        return sortClause_.get(index);
      } else {
        return sortClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder setSortClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (sortClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortClauseIsMutable();
        sortClause_.set(index, value);
        onChanged();
      } else {
        sortClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder setSortClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (sortClauseBuilder_ == null) {
        ensureSortClauseIsMutable();
        sortClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        sortClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder addSortClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (sortClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortClauseIsMutable();
        sortClause_.add(value);
        onChanged();
      } else {
        sortClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder addSortClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (sortClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortClauseIsMutable();
        sortClause_.add(index, value);
        onChanged();
      } else {
        sortClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder addSortClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (sortClauseBuilder_ == null) {
        ensureSortClauseIsMutable();
        sortClause_.add(builderForValue.build());
        onChanged();
      } else {
        sortClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder addSortClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (sortClauseBuilder_ == null) {
        ensureSortClauseIsMutable();
        sortClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        sortClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder addAllSortClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (sortClauseBuilder_ == null) {
        ensureSortClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sortClause_);
        onChanged();
      } else {
        sortClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder clearSortClause() {
      if (sortClauseBuilder_ == null) {
        sortClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        sortClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public Builder removeSortClause(int index) {
      if (sortClauseBuilder_ == null) {
        ensureSortClauseIsMutable();
        sortClause_.remove(index);
        onChanged();
      } else {
        sortClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getSortClauseBuilder(
        int index) {
      return getSortClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getSortClauseOrBuilder(
        int index) {
      if (sortClauseBuilder_ == null) {
        return sortClause_.get(index);  } else {
        return sortClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getSortClauseOrBuilderList() {
      if (sortClauseBuilder_ != null) {
        return sortClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sortClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addSortClauseBuilder() {
      return getSortClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addSortClauseBuilder(
        int index) {
      return getSortClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node sort_clause = 11 [json_name = "sortClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getSortClauseBuilderList() {
      return getSortClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getSortClauseFieldBuilder() {
      if (sortClauseBuilder_ == null) {
        sortClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                sortClause_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        sortClause_ = null;
      }
      return sortClauseBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node limitOffset_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> limitOffsetBuilder_;
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     * @return Whether the limitOffset field is set.
     */
    public boolean hasLimitOffset() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     * @return The limitOffset.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getLimitOffset() {
      if (limitOffsetBuilder_ == null) {
        return limitOffset_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitOffset_;
      } else {
        return limitOffsetBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public Builder setLimitOffset(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (limitOffsetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        limitOffset_ = value;
      } else {
        limitOffsetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public Builder setLimitOffset(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (limitOffsetBuilder_ == null) {
        limitOffset_ = builderForValue.build();
      } else {
        limitOffsetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public Builder mergeLimitOffset(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (limitOffsetBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0) &&
          limitOffset_ != null &&
          limitOffset_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getLimitOffsetBuilder().mergeFrom(value);
        } else {
          limitOffset_ = value;
        }
      } else {
        limitOffsetBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public Builder clearLimitOffset() {
      bitField0_ = (bitField0_ & ~0x00000800);
      limitOffset_ = null;
      if (limitOffsetBuilder_ != null) {
        limitOffsetBuilder_.dispose();
        limitOffsetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getLimitOffsetBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getLimitOffsetFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLimitOffsetOrBuilder() {
      if (limitOffsetBuilder_ != null) {
        return limitOffsetBuilder_.getMessageOrBuilder();
      } else {
        return limitOffset_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitOffset_;
      }
    }
    /**
     * <code>.pg_query.Node limit_offset = 12 [json_name = "limitOffset"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getLimitOffsetFieldBuilder() {
      if (limitOffsetBuilder_ == null) {
        limitOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getLimitOffset(),
                getParentForChildren(),
                isClean());
        limitOffset_ = null;
      }
      return limitOffsetBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node limitCount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> limitCountBuilder_;
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     * @return Whether the limitCount field is set.
     */
    public boolean hasLimitCount() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     * @return The limitCount.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getLimitCount() {
      if (limitCountBuilder_ == null) {
        return limitCount_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitCount_;
      } else {
        return limitCountBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public Builder setLimitCount(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (limitCountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        limitCount_ = value;
      } else {
        limitCountBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public Builder setLimitCount(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (limitCountBuilder_ == null) {
        limitCount_ = builderForValue.build();
      } else {
        limitCountBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public Builder mergeLimitCount(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (limitCountBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          limitCount_ != null &&
          limitCount_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getLimitCountBuilder().mergeFrom(value);
        } else {
          limitCount_ = value;
        }
      } else {
        limitCountBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public Builder clearLimitCount() {
      bitField0_ = (bitField0_ & ~0x00001000);
      limitCount_ = null;
      if (limitCountBuilder_ != null) {
        limitCountBuilder_.dispose();
        limitCountBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getLimitCountBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getLimitCountFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLimitCountOrBuilder() {
      if (limitCountBuilder_ != null) {
        return limitCountBuilder_.getMessageOrBuilder();
      } else {
        return limitCount_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : limitCount_;
      }
    }
    /**
     * <code>.pg_query.Node limit_count = 13 [json_name = "limitCount"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getLimitCountFieldBuilder() {
      if (limitCountBuilder_ == null) {
        limitCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getLimitCount(),
                getParentForChildren(),
                isClean());
        limitCount_ = null;
      }
      return limitCountBuilder_;
    }

    private int limitOption_ = 0;
    /**
     * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
     * @return The enum numeric value on the wire for limitOption.
     */
    @java.lang.Override public int getLimitOptionValue() {
      return limitOption_;
    }
    /**
     * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
     * @param value The enum numeric value on the wire for limitOption to set.
     * @return This builder for chaining.
     */
    public Builder setLimitOptionValue(int value) {
      limitOption_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
     * @return The limitOption.
     */
    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.LimitOption getLimitOption() {
      com.premiumminds.sonar.postgres.protobuf.LimitOption result = com.premiumminds.sonar.postgres.protobuf.LimitOption.forNumber(limitOption_);
      return result == null ? com.premiumminds.sonar.postgres.protobuf.LimitOption.UNRECOGNIZED : result;
    }
    /**
     * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
     * @param value The limitOption to set.
     * @return This builder for chaining.
     */
    public Builder setLimitOption(com.premiumminds.sonar.postgres.protobuf.LimitOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00002000;
      limitOption_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.LimitOption limit_option = 14 [json_name = "limitOption"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLimitOption() {
      bitField0_ = (bitField0_ & ~0x00002000);
      limitOption_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> lockingClause_ =
      java.util.Collections.emptyList();
    private void ensureLockingClauseIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        lockingClause_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(lockingClause_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> lockingClauseBuilder_;

    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getLockingClauseList() {
      if (lockingClauseBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lockingClause_);
      } else {
        return lockingClauseBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public int getLockingClauseCount() {
      if (lockingClauseBuilder_ == null) {
        return lockingClause_.size();
      } else {
        return lockingClauseBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getLockingClause(int index) {
      if (lockingClauseBuilder_ == null) {
        return lockingClause_.get(index);
      } else {
        return lockingClauseBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder setLockingClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (lockingClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLockingClauseIsMutable();
        lockingClause_.set(index, value);
        onChanged();
      } else {
        lockingClauseBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder setLockingClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (lockingClauseBuilder_ == null) {
        ensureLockingClauseIsMutable();
        lockingClause_.set(index, builderForValue.build());
        onChanged();
      } else {
        lockingClauseBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder addLockingClause(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (lockingClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLockingClauseIsMutable();
        lockingClause_.add(value);
        onChanged();
      } else {
        lockingClauseBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder addLockingClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (lockingClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLockingClauseIsMutable();
        lockingClause_.add(index, value);
        onChanged();
      } else {
        lockingClauseBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder addLockingClause(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (lockingClauseBuilder_ == null) {
        ensureLockingClauseIsMutable();
        lockingClause_.add(builderForValue.build());
        onChanged();
      } else {
        lockingClauseBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder addLockingClause(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (lockingClauseBuilder_ == null) {
        ensureLockingClauseIsMutable();
        lockingClause_.add(index, builderForValue.build());
        onChanged();
      } else {
        lockingClauseBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder addAllLockingClause(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (lockingClauseBuilder_ == null) {
        ensureLockingClauseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lockingClause_);
        onChanged();
      } else {
        lockingClauseBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder clearLockingClause() {
      if (lockingClauseBuilder_ == null) {
        lockingClause_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        lockingClauseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public Builder removeLockingClause(int index) {
      if (lockingClauseBuilder_ == null) {
        ensureLockingClauseIsMutable();
        lockingClause_.remove(index);
        onChanged();
      } else {
        lockingClauseBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getLockingClauseBuilder(
        int index) {
      return getLockingClauseFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getLockingClauseOrBuilder(
        int index) {
      if (lockingClauseBuilder_ == null) {
        return lockingClause_.get(index);  } else {
        return lockingClauseBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getLockingClauseOrBuilderList() {
      if (lockingClauseBuilder_ != null) {
        return lockingClauseBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lockingClause_);
      }
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addLockingClauseBuilder() {
      return getLockingClauseFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addLockingClauseBuilder(
        int index) {
      return getLockingClauseFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node locking_clause = 15 [json_name = "lockingClause"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getLockingClauseBuilderList() {
      return getLockingClauseFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getLockingClauseFieldBuilder() {
      if (lockingClauseBuilder_ == null) {
        lockingClauseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                lockingClause_,
                ((bitField0_ & 0x00004000) != 0),
                getParentForChildren(),
                isClean());
        lockingClause_ = null;
      }
      return lockingClauseBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.WithClause withClause_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.WithClause, com.premiumminds.sonar.postgres.protobuf.WithClause.Builder, com.premiumminds.sonar.postgres.protobuf.WithClauseOrBuilder> withClauseBuilder_;
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     * @return Whether the withClause field is set.
     */
    public boolean hasWithClause() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     * @return The withClause.
     */
    public com.premiumminds.sonar.postgres.protobuf.WithClause getWithClause() {
      if (withClauseBuilder_ == null) {
        return withClause_ == null ? com.premiumminds.sonar.postgres.protobuf.WithClause.getDefaultInstance() : withClause_;
      } else {
        return withClauseBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public Builder setWithClause(com.premiumminds.sonar.postgres.protobuf.WithClause value) {
      if (withClauseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        withClause_ = value;
      } else {
        withClauseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public Builder setWithClause(
        com.premiumminds.sonar.postgres.protobuf.WithClause.Builder builderForValue) {
      if (withClauseBuilder_ == null) {
        withClause_ = builderForValue.build();
      } else {
        withClauseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public Builder mergeWithClause(com.premiumminds.sonar.postgres.protobuf.WithClause value) {
      if (withClauseBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0) &&
          withClause_ != null &&
          withClause_ != com.premiumminds.sonar.postgres.protobuf.WithClause.getDefaultInstance()) {
          getWithClauseBuilder().mergeFrom(value);
        } else {
          withClause_ = value;
        }
      } else {
        withClauseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public Builder clearWithClause() {
      bitField0_ = (bitField0_ & ~0x00008000);
      withClause_ = null;
      if (withClauseBuilder_ != null) {
        withClauseBuilder_.dispose();
        withClauseBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.WithClause.Builder getWithClauseBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getWithClauseFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.WithClauseOrBuilder getWithClauseOrBuilder() {
      if (withClauseBuilder_ != null) {
        return withClauseBuilder_.getMessageOrBuilder();
      } else {
        return withClause_ == null ?
            com.premiumminds.sonar.postgres.protobuf.WithClause.getDefaultInstance() : withClause_;
      }
    }
    /**
     * <code>.pg_query.WithClause with_clause = 16 [json_name = "withClause"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.WithClause, com.premiumminds.sonar.postgres.protobuf.WithClause.Builder, com.premiumminds.sonar.postgres.protobuf.WithClauseOrBuilder> 
        getWithClauseFieldBuilder() {
      if (withClauseBuilder_ == null) {
        withClauseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.WithClause, com.premiumminds.sonar.postgres.protobuf.WithClause.Builder, com.premiumminds.sonar.postgres.protobuf.WithClauseOrBuilder>(
                getWithClause(),
                getParentForChildren(),
                isClean());
        withClause_ = null;
      }
      return withClauseBuilder_;
    }

    private int op_ = 0;
    /**
     * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
     * @return The enum numeric value on the wire for op.
     */
    @java.lang.Override public int getOpValue() {
      return op_;
    }
    /**
     * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
     * @param value The enum numeric value on the wire for op to set.
     * @return This builder for chaining.
     */
    public Builder setOpValue(int value) {
      op_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
     * @return The op.
     */
    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.SetOperation getOp() {
      com.premiumminds.sonar.postgres.protobuf.SetOperation result = com.premiumminds.sonar.postgres.protobuf.SetOperation.forNumber(op_);
      return result == null ? com.premiumminds.sonar.postgres.protobuf.SetOperation.UNRECOGNIZED : result;
    }
    /**
     * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
     * @param value The op to set.
     * @return This builder for chaining.
     */
    public Builder setOp(com.premiumminds.sonar.postgres.protobuf.SetOperation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00010000;
      op_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SetOperation op = 17 [json_name = "op"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOp() {
      bitField0_ = (bitField0_ & ~0x00010000);
      op_ = 0;
      onChanged();
      return this;
    }

    private boolean all_ ;
    /**
     * <code>bool all = 18 [json_name = "all"];</code>
     * @return The all.
     */
    @java.lang.Override
    public boolean getAll() {
      return all_;
    }
    /**
     * <code>bool all = 18 [json_name = "all"];</code>
     * @param value The all to set.
     * @return This builder for chaining.
     */
    public Builder setAll(boolean value) {
      
      all_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <code>bool all = 18 [json_name = "all"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAll() {
      bitField0_ = (bitField0_ & ~0x00020000);
      all_ = false;
      onChanged();
      return this;
    }

    private com.premiumminds.sonar.postgres.protobuf.SelectStmt larg_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder> largBuilder_;
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     * @return Whether the larg field is set.
     */
    public boolean hasLarg() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     * @return The larg.
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt getLarg() {
      if (largBuilder_ == null) {
        return larg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : larg_;
      } else {
        return largBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public Builder setLarg(com.premiumminds.sonar.postgres.protobuf.SelectStmt value) {
      if (largBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        larg_ = value;
      } else {
        largBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public Builder setLarg(
        com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder builderForValue) {
      if (largBuilder_ == null) {
        larg_ = builderForValue.build();
      } else {
        largBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public Builder mergeLarg(com.premiumminds.sonar.postgres.protobuf.SelectStmt value) {
      if (largBuilder_ == null) {
        if (((bitField0_ & 0x00040000) != 0) &&
          larg_ != null &&
          larg_ != com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance()) {
          getLargBuilder().mergeFrom(value);
        } else {
          larg_ = value;
        }
      } else {
        largBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public Builder clearLarg() {
      bitField0_ = (bitField0_ & ~0x00040000);
      larg_ = null;
      if (largBuilder_ != null) {
        largBuilder_.dispose();
        largBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder getLargBuilder() {
      bitField0_ |= 0x00040000;
      onChanged();
      return getLargFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder getLargOrBuilder() {
      if (largBuilder_ != null) {
        return largBuilder_.getMessageOrBuilder();
      } else {
        return larg_ == null ?
            com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : larg_;
      }
    }
    /**
     * <code>.pg_query.SelectStmt larg = 19 [json_name = "larg"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder> 
        getLargFieldBuilder() {
      if (largBuilder_ == null) {
        largBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder>(
                getLarg(),
                getParentForChildren(),
                isClean());
        larg_ = null;
      }
      return largBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.SelectStmt rarg_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder> rargBuilder_;
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     * @return Whether the rarg field is set.
     */
    public boolean hasRarg() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     * @return The rarg.
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt getRarg() {
      if (rargBuilder_ == null) {
        return rarg_ == null ? com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : rarg_;
      } else {
        return rargBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public Builder setRarg(com.premiumminds.sonar.postgres.protobuf.SelectStmt value) {
      if (rargBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rarg_ = value;
      } else {
        rargBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public Builder setRarg(
        com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder builderForValue) {
      if (rargBuilder_ == null) {
        rarg_ = builderForValue.build();
      } else {
        rargBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public Builder mergeRarg(com.premiumminds.sonar.postgres.protobuf.SelectStmt value) {
      if (rargBuilder_ == null) {
        if (((bitField0_ & 0x00080000) != 0) &&
          rarg_ != null &&
          rarg_ != com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance()) {
          getRargBuilder().mergeFrom(value);
        } else {
          rarg_ = value;
        }
      } else {
        rargBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public Builder clearRarg() {
      bitField0_ = (bitField0_ & ~0x00080000);
      rarg_ = null;
      if (rargBuilder_ != null) {
        rargBuilder_.dispose();
        rargBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder getRargBuilder() {
      bitField0_ |= 0x00080000;
      onChanged();
      return getRargFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder getRargOrBuilder() {
      if (rargBuilder_ != null) {
        return rargBuilder_.getMessageOrBuilder();
      } else {
        return rarg_ == null ?
            com.premiumminds.sonar.postgres.protobuf.SelectStmt.getDefaultInstance() : rarg_;
      }
    }
    /**
     * <code>.pg_query.SelectStmt rarg = 20 [json_name = "rarg"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder> 
        getRargFieldBuilder() {
      if (rargBuilder_ == null) {
        rargBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.SelectStmt, com.premiumminds.sonar.postgres.protobuf.SelectStmt.Builder, com.premiumminds.sonar.postgres.protobuf.SelectStmtOrBuilder>(
                getRarg(),
                getParentForChildren(),
                isClean());
        rarg_ = null;
      }
      return rargBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:pg_query.SelectStmt)
  }

  // @@protoc_insertion_point(class_scope:pg_query.SelectStmt)
  private static final com.premiumminds.sonar.postgres.protobuf.SelectStmt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.premiumminds.sonar.postgres.protobuf.SelectStmt();
  }

  public static com.premiumminds.sonar.postgres.protobuf.SelectStmt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SelectStmt>
      PARSER = new com.google.protobuf.AbstractParser<SelectStmt>() {
    @java.lang.Override
    public SelectStmt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SelectStmt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SelectStmt> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.SelectStmt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

