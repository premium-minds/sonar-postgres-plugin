// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface IntoClauseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.IntoClause)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.RangeVar rel = 1 [json_name = "rel"];</code>
   * @return Whether the rel field is set.
   */
  boolean hasRel();
  /**
   * <code>.pg_query.RangeVar rel = 1 [json_name = "rel"];</code>
   * @return The rel.
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVar getRel();
  /**
   * <code>.pg_query.RangeVar rel = 1 [json_name = "rel"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVarOrBuilder getRelOrBuilder();

  /**
   * <code>repeated .pg_query.Node col_names = 2 [json_name = "colNames"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getColNamesList();
  /**
   * <code>repeated .pg_query.Node col_names = 2 [json_name = "colNames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getColNames(int index);
  /**
   * <code>repeated .pg_query.Node col_names = 2 [json_name = "colNames"];</code>
   */
  int getColNamesCount();
  /**
   * <code>repeated .pg_query.Node col_names = 2 [json_name = "colNames"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getColNamesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node col_names = 2 [json_name = "colNames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getColNamesOrBuilder(
      int index);

  /**
   * <code>string access_method = 3 [json_name = "accessMethod"];</code>
   * @return The accessMethod.
   */
  java.lang.String getAccessMethod();
  /**
   * <code>string access_method = 3 [json_name = "accessMethod"];</code>
   * @return The bytes for accessMethod.
   */
  com.google.protobuf.ByteString
      getAccessMethodBytes();

  /**
   * <code>repeated .pg_query.Node options = 4 [json_name = "options"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getOptionsList();
  /**
   * <code>repeated .pg_query.Node options = 4 [json_name = "options"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getOptions(int index);
  /**
   * <code>repeated .pg_query.Node options = 4 [json_name = "options"];</code>
   */
  int getOptionsCount();
  /**
   * <code>repeated .pg_query.Node options = 4 [json_name = "options"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getOptionsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node options = 4 [json_name = "options"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getOptionsOrBuilder(
      int index);

  /**
   * <code>.pg_query.OnCommitAction on_commit = 5 [json_name = "onCommit"];</code>
   * @return The enum numeric value on the wire for onCommit.
   */
  int getOnCommitValue();
  /**
   * <code>.pg_query.OnCommitAction on_commit = 5 [json_name = "onCommit"];</code>
   * @return The onCommit.
   */
  com.premiumminds.sonar.postgres.protobuf.OnCommitAction getOnCommit();

  /**
   * <code>string table_space_name = 6 [json_name = "tableSpaceName"];</code>
   * @return The tableSpaceName.
   */
  java.lang.String getTableSpaceName();
  /**
   * <code>string table_space_name = 6 [json_name = "tableSpaceName"];</code>
   * @return The bytes for tableSpaceName.
   */
  com.google.protobuf.ByteString
      getTableSpaceNameBytes();

  /**
   * <code>.pg_query.Node view_query = 7 [json_name = "viewQuery"];</code>
   * @return Whether the viewQuery field is set.
   */
  boolean hasViewQuery();
  /**
   * <code>.pg_query.Node view_query = 7 [json_name = "viewQuery"];</code>
   * @return The viewQuery.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getViewQuery();
  /**
   * <code>.pg_query.Node view_query = 7 [json_name = "viewQuery"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getViewQueryOrBuilder();

  /**
   * <code>bool skip_data = 8 [json_name = "skipData"];</code>
   * @return The skipData.
   */
  boolean getSkipData();
}
