// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

/**
 * Protobuf type {@code pg_query.CTECycleClause}
 */
public final class CTECycleClause extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pg_query.CTECycleClause)
    CTECycleClauseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CTECycleClause.newBuilder() to construct.
  private CTECycleClause(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CTECycleClause() {
    cycleColList_ = java.util.Collections.emptyList();
    cycleMarkColumn_ = "";
    cyclePathColumn_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CTECycleClause();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_CTECycleClause_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_CTECycleClause_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.premiumminds.sonar.postgres.protobuf.CTECycleClause.class, com.premiumminds.sonar.postgres.protobuf.CTECycleClause.Builder.class);
  }

  private int bitField0_;
  public static final int CYCLE_COL_LIST_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> cycleColList_;
  /**
   * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
   */
  @java.lang.Override
  public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getCycleColListList() {
    return cycleColList_;
  }
  /**
   * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getCycleColListOrBuilderList() {
    return cycleColList_;
  }
  /**
   * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
   */
  @java.lang.Override
  public int getCycleColListCount() {
    return cycleColList_.size();
  }
  /**
   * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getCycleColList(int index) {
    return cycleColList_.get(index);
  }
  /**
   * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleColListOrBuilder(
      int index) {
    return cycleColList_.get(index);
  }

  public static final int CYCLE_MARK_COLUMN_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cycleMarkColumn_ = "";
  /**
   * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
   * @return The cycleMarkColumn.
   */
  @java.lang.Override
  public java.lang.String getCycleMarkColumn() {
    java.lang.Object ref = cycleMarkColumn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cycleMarkColumn_ = s;
      return s;
    }
  }
  /**
   * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
   * @return The bytes for cycleMarkColumn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCycleMarkColumnBytes() {
    java.lang.Object ref = cycleMarkColumn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cycleMarkColumn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CYCLE_MARK_VALUE_FIELD_NUMBER = 3;
  private com.premiumminds.sonar.postgres.protobuf.Node cycleMarkValue_;
  /**
   * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
   * @return Whether the cycleMarkValue field is set.
   */
  @java.lang.Override
  public boolean hasCycleMarkValue() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
   * @return The cycleMarkValue.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getCycleMarkValue() {
    return cycleMarkValue_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkValue_;
  }
  /**
   * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleMarkValueOrBuilder() {
    return cycleMarkValue_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkValue_;
  }

  public static final int CYCLE_MARK_DEFAULT_FIELD_NUMBER = 4;
  private com.premiumminds.sonar.postgres.protobuf.Node cycleMarkDefault_;
  /**
   * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
   * @return Whether the cycleMarkDefault field is set.
   */
  @java.lang.Override
  public boolean hasCycleMarkDefault() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
   * @return The cycleMarkDefault.
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.Node getCycleMarkDefault() {
    return cycleMarkDefault_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkDefault_;
  }
  /**
   * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
   */
  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleMarkDefaultOrBuilder() {
    return cycleMarkDefault_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkDefault_;
  }

  public static final int CYCLE_PATH_COLUMN_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cyclePathColumn_ = "";
  /**
   * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
   * @return The cyclePathColumn.
   */
  @java.lang.Override
  public java.lang.String getCyclePathColumn() {
    java.lang.Object ref = cyclePathColumn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cyclePathColumn_ = s;
      return s;
    }
  }
  /**
   * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
   * @return The bytes for cyclePathColumn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCyclePathColumnBytes() {
    java.lang.Object ref = cyclePathColumn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cyclePathColumn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCATION_FIELD_NUMBER = 6;
  private int location_ = 0;
  /**
   * <code>int32 location = 6 [json_name = "location"];</code>
   * @return The location.
   */
  @java.lang.Override
  public int getLocation() {
    return location_;
  }

  public static final int CYCLE_MARK_TYPE_FIELD_NUMBER = 7;
  private int cycleMarkType_ = 0;
  /**
   * <code>uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];</code>
   * @return The cycleMarkType.
   */
  @java.lang.Override
  public int getCycleMarkType() {
    return cycleMarkType_;
  }

  public static final int CYCLE_MARK_TYPMOD_FIELD_NUMBER = 8;
  private int cycleMarkTypmod_ = 0;
  /**
   * <code>int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];</code>
   * @return The cycleMarkTypmod.
   */
  @java.lang.Override
  public int getCycleMarkTypmod() {
    return cycleMarkTypmod_;
  }

  public static final int CYCLE_MARK_COLLATION_FIELD_NUMBER = 9;
  private int cycleMarkCollation_ = 0;
  /**
   * <code>uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];</code>
   * @return The cycleMarkCollation.
   */
  @java.lang.Override
  public int getCycleMarkCollation() {
    return cycleMarkCollation_;
  }

  public static final int CYCLE_MARK_NEOP_FIELD_NUMBER = 10;
  private int cycleMarkNeop_ = 0;
  /**
   * <code>uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];</code>
   * @return The cycleMarkNeop.
   */
  @java.lang.Override
  public int getCycleMarkNeop() {
    return cycleMarkNeop_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < cycleColList_.size(); i++) {
      output.writeMessage(1, cycleColList_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cycleMarkColumn_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cycleMarkColumn_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getCycleMarkValue());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getCycleMarkDefault());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cyclePathColumn_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, cyclePathColumn_);
    }
    if (location_ != 0) {
      output.writeInt32(6, location_);
    }
    if (cycleMarkType_ != 0) {
      output.writeUInt32(7, cycleMarkType_);
    }
    if (cycleMarkTypmod_ != 0) {
      output.writeInt32(8, cycleMarkTypmod_);
    }
    if (cycleMarkCollation_ != 0) {
      output.writeUInt32(9, cycleMarkCollation_);
    }
    if (cycleMarkNeop_ != 0) {
      output.writeUInt32(10, cycleMarkNeop_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < cycleColList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, cycleColList_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cycleMarkColumn_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cycleMarkColumn_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCycleMarkValue());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCycleMarkDefault());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cyclePathColumn_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, cyclePathColumn_);
    }
    if (location_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, location_);
    }
    if (cycleMarkType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, cycleMarkType_);
    }
    if (cycleMarkTypmod_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, cycleMarkTypmod_);
    }
    if (cycleMarkCollation_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, cycleMarkCollation_);
    }
    if (cycleMarkNeop_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, cycleMarkNeop_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.premiumminds.sonar.postgres.protobuf.CTECycleClause)) {
      return super.equals(obj);
    }
    com.premiumminds.sonar.postgres.protobuf.CTECycleClause other = (com.premiumminds.sonar.postgres.protobuf.CTECycleClause) obj;

    if (!getCycleColListList()
        .equals(other.getCycleColListList())) return false;
    if (!getCycleMarkColumn()
        .equals(other.getCycleMarkColumn())) return false;
    if (hasCycleMarkValue() != other.hasCycleMarkValue()) return false;
    if (hasCycleMarkValue()) {
      if (!getCycleMarkValue()
          .equals(other.getCycleMarkValue())) return false;
    }
    if (hasCycleMarkDefault() != other.hasCycleMarkDefault()) return false;
    if (hasCycleMarkDefault()) {
      if (!getCycleMarkDefault()
          .equals(other.getCycleMarkDefault())) return false;
    }
    if (!getCyclePathColumn()
        .equals(other.getCyclePathColumn())) return false;
    if (getLocation()
        != other.getLocation()) return false;
    if (getCycleMarkType()
        != other.getCycleMarkType()) return false;
    if (getCycleMarkTypmod()
        != other.getCycleMarkTypmod()) return false;
    if (getCycleMarkCollation()
        != other.getCycleMarkCollation()) return false;
    if (getCycleMarkNeop()
        != other.getCycleMarkNeop()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCycleColListCount() > 0) {
      hash = (37 * hash) + CYCLE_COL_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getCycleColListList().hashCode();
    }
    hash = (37 * hash) + CYCLE_MARK_COLUMN_FIELD_NUMBER;
    hash = (53 * hash) + getCycleMarkColumn().hashCode();
    if (hasCycleMarkValue()) {
      hash = (37 * hash) + CYCLE_MARK_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getCycleMarkValue().hashCode();
    }
    if (hasCycleMarkDefault()) {
      hash = (37 * hash) + CYCLE_MARK_DEFAULT_FIELD_NUMBER;
      hash = (53 * hash) + getCycleMarkDefault().hashCode();
    }
    hash = (37 * hash) + CYCLE_PATH_COLUMN_FIELD_NUMBER;
    hash = (53 * hash) + getCyclePathColumn().hashCode();
    hash = (37 * hash) + LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getLocation();
    hash = (37 * hash) + CYCLE_MARK_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCycleMarkType();
    hash = (37 * hash) + CYCLE_MARK_TYPMOD_FIELD_NUMBER;
    hash = (53 * hash) + getCycleMarkTypmod();
    hash = (37 * hash) + CYCLE_MARK_COLLATION_FIELD_NUMBER;
    hash = (53 * hash) + getCycleMarkCollation();
    hash = (37 * hash) + CYCLE_MARK_NEOP_FIELD_NUMBER;
    hash = (53 * hash) + getCycleMarkNeop();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.premiumminds.sonar.postgres.protobuf.CTECycleClause prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pg_query.CTECycleClause}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pg_query.CTECycleClause)
      com.premiumminds.sonar.postgres.protobuf.CTECycleClauseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_CTECycleClause_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_CTECycleClause_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.premiumminds.sonar.postgres.protobuf.CTECycleClause.class, com.premiumminds.sonar.postgres.protobuf.CTECycleClause.Builder.class);
    }

    // Construct using com.premiumminds.sonar.postgres.protobuf.CTECycleClause.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCycleColListFieldBuilder();
        getCycleMarkValueFieldBuilder();
        getCycleMarkDefaultFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (cycleColListBuilder_ == null) {
        cycleColList_ = java.util.Collections.emptyList();
      } else {
        cycleColList_ = null;
        cycleColListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      cycleMarkColumn_ = "";
      cycleMarkValue_ = null;
      if (cycleMarkValueBuilder_ != null) {
        cycleMarkValueBuilder_.dispose();
        cycleMarkValueBuilder_ = null;
      }
      cycleMarkDefault_ = null;
      if (cycleMarkDefaultBuilder_ != null) {
        cycleMarkDefaultBuilder_.dispose();
        cycleMarkDefaultBuilder_ = null;
      }
      cyclePathColumn_ = "";
      location_ = 0;
      cycleMarkType_ = 0;
      cycleMarkTypmod_ = 0;
      cycleMarkCollation_ = 0;
      cycleMarkNeop_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.premiumminds.sonar.postgres.protobuf.PgQuery.internal_static_pg_query_CTECycleClause_descriptor;
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.CTECycleClause getDefaultInstanceForType() {
      return com.premiumminds.sonar.postgres.protobuf.CTECycleClause.getDefaultInstance();
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.CTECycleClause build() {
      com.premiumminds.sonar.postgres.protobuf.CTECycleClause result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.premiumminds.sonar.postgres.protobuf.CTECycleClause buildPartial() {
      com.premiumminds.sonar.postgres.protobuf.CTECycleClause result = new com.premiumminds.sonar.postgres.protobuf.CTECycleClause(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.premiumminds.sonar.postgres.protobuf.CTECycleClause result) {
      if (cycleColListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          cycleColList_ = java.util.Collections.unmodifiableList(cycleColList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cycleColList_ = cycleColList_;
      } else {
        result.cycleColList_ = cycleColListBuilder_.build();
      }
    }

    private void buildPartial0(com.premiumminds.sonar.postgres.protobuf.CTECycleClause result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.cycleMarkColumn_ = cycleMarkColumn_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.cycleMarkValue_ = cycleMarkValueBuilder_ == null
            ? cycleMarkValue_
            : cycleMarkValueBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.cycleMarkDefault_ = cycleMarkDefaultBuilder_ == null
            ? cycleMarkDefault_
            : cycleMarkDefaultBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.cyclePathColumn_ = cyclePathColumn_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.location_ = location_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.cycleMarkType_ = cycleMarkType_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.cycleMarkTypmod_ = cycleMarkTypmod_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.cycleMarkCollation_ = cycleMarkCollation_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.cycleMarkNeop_ = cycleMarkNeop_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.premiumminds.sonar.postgres.protobuf.CTECycleClause) {
        return mergeFrom((com.premiumminds.sonar.postgres.protobuf.CTECycleClause)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.premiumminds.sonar.postgres.protobuf.CTECycleClause other) {
      if (other == com.premiumminds.sonar.postgres.protobuf.CTECycleClause.getDefaultInstance()) return this;
      if (cycleColListBuilder_ == null) {
        if (!other.cycleColList_.isEmpty()) {
          if (cycleColList_.isEmpty()) {
            cycleColList_ = other.cycleColList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCycleColListIsMutable();
            cycleColList_.addAll(other.cycleColList_);
          }
          onChanged();
        }
      } else {
        if (!other.cycleColList_.isEmpty()) {
          if (cycleColListBuilder_.isEmpty()) {
            cycleColListBuilder_.dispose();
            cycleColListBuilder_ = null;
            cycleColList_ = other.cycleColList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            cycleColListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCycleColListFieldBuilder() : null;
          } else {
            cycleColListBuilder_.addAllMessages(other.cycleColList_);
          }
        }
      }
      if (!other.getCycleMarkColumn().isEmpty()) {
        cycleMarkColumn_ = other.cycleMarkColumn_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasCycleMarkValue()) {
        mergeCycleMarkValue(other.getCycleMarkValue());
      }
      if (other.hasCycleMarkDefault()) {
        mergeCycleMarkDefault(other.getCycleMarkDefault());
      }
      if (!other.getCyclePathColumn().isEmpty()) {
        cyclePathColumn_ = other.cyclePathColumn_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getLocation() != 0) {
        setLocation(other.getLocation());
      }
      if (other.getCycleMarkType() != 0) {
        setCycleMarkType(other.getCycleMarkType());
      }
      if (other.getCycleMarkTypmod() != 0) {
        setCycleMarkTypmod(other.getCycleMarkTypmod());
      }
      if (other.getCycleMarkCollation() != 0) {
        setCycleMarkCollation(other.getCycleMarkCollation());
      }
      if (other.getCycleMarkNeop() != 0) {
        setCycleMarkNeop(other.getCycleMarkNeop());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.premiumminds.sonar.postgres.protobuf.Node m =
                  input.readMessage(
                      com.premiumminds.sonar.postgres.protobuf.Node.parser(),
                      extensionRegistry);
              if (cycleColListBuilder_ == null) {
                ensureCycleColListIsMutable();
                cycleColList_.add(m);
              } else {
                cycleColListBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              cycleMarkColumn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCycleMarkValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getCycleMarkDefaultFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              cyclePathColumn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              location_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              cycleMarkType_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              cycleMarkTypmod_ = input.readInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              cycleMarkCollation_ = input.readUInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              cycleMarkNeop_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> cycleColList_ =
      java.util.Collections.emptyList();
    private void ensureCycleColListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        cycleColList_ = new java.util.ArrayList<com.premiumminds.sonar.postgres.protobuf.Node>(cycleColList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> cycleColListBuilder_;

    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> getCycleColListList() {
      if (cycleColListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cycleColList_);
      } else {
        return cycleColListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public int getCycleColListCount() {
      if (cycleColListBuilder_ == null) {
        return cycleColList_.size();
      } else {
        return cycleColListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getCycleColList(int index) {
      if (cycleColListBuilder_ == null) {
        return cycleColList_.get(index);
      } else {
        return cycleColListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder setCycleColList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleColListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCycleColListIsMutable();
        cycleColList_.set(index, value);
        onChanged();
      } else {
        cycleColListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder setCycleColList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (cycleColListBuilder_ == null) {
        ensureCycleColListIsMutable();
        cycleColList_.set(index, builderForValue.build());
        onChanged();
      } else {
        cycleColListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder addCycleColList(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleColListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCycleColListIsMutable();
        cycleColList_.add(value);
        onChanged();
      } else {
        cycleColListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder addCycleColList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleColListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCycleColListIsMutable();
        cycleColList_.add(index, value);
        onChanged();
      } else {
        cycleColListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder addCycleColList(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (cycleColListBuilder_ == null) {
        ensureCycleColListIsMutable();
        cycleColList_.add(builderForValue.build());
        onChanged();
      } else {
        cycleColListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder addCycleColList(
        int index, com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (cycleColListBuilder_ == null) {
        ensureCycleColListIsMutable();
        cycleColList_.add(index, builderForValue.build());
        onChanged();
      } else {
        cycleColListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder addAllCycleColList(
        java.lang.Iterable<? extends com.premiumminds.sonar.postgres.protobuf.Node> values) {
      if (cycleColListBuilder_ == null) {
        ensureCycleColListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cycleColList_);
        onChanged();
      } else {
        cycleColListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder clearCycleColList() {
      if (cycleColListBuilder_ == null) {
        cycleColList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        cycleColListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public Builder removeCycleColList(int index) {
      if (cycleColListBuilder_ == null) {
        ensureCycleColListIsMutable();
        cycleColList_.remove(index);
        onChanged();
      } else {
        cycleColListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getCycleColListBuilder(
        int index) {
      return getCycleColListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleColListOrBuilder(
        int index) {
      if (cycleColListBuilder_ == null) {
        return cycleColList_.get(index);  } else {
        return cycleColListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
         getCycleColListOrBuilderList() {
      if (cycleColListBuilder_ != null) {
        return cycleColListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cycleColList_);
      }
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addCycleColListBuilder() {
      return getCycleColListFieldBuilder().addBuilder(
          com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder addCycleColListBuilder(
        int index) {
      return getCycleColListFieldBuilder().addBuilder(
          index, com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];</code>
     */
    public java.util.List<com.premiumminds.sonar.postgres.protobuf.Node.Builder> 
         getCycleColListBuilderList() {
      return getCycleColListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getCycleColListFieldBuilder() {
      if (cycleColListBuilder_ == null) {
        cycleColListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                cycleColList_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        cycleColList_ = null;
      }
      return cycleColListBuilder_;
    }

    private java.lang.Object cycleMarkColumn_ = "";
    /**
     * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
     * @return The cycleMarkColumn.
     */
    public java.lang.String getCycleMarkColumn() {
      java.lang.Object ref = cycleMarkColumn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cycleMarkColumn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
     * @return The bytes for cycleMarkColumn.
     */
    public com.google.protobuf.ByteString
        getCycleMarkColumnBytes() {
      java.lang.Object ref = cycleMarkColumn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cycleMarkColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
     * @param value The cycleMarkColumn to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkColumn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cycleMarkColumn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCycleMarkColumn() {
      cycleMarkColumn_ = getDefaultInstance().getCycleMarkColumn();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string cycle_mark_column = 2 [json_name = "cycle_mark_column"];</code>
     * @param value The bytes for cycleMarkColumn to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkColumnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cycleMarkColumn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node cycleMarkValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> cycleMarkValueBuilder_;
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     * @return Whether the cycleMarkValue field is set.
     */
    public boolean hasCycleMarkValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     * @return The cycleMarkValue.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getCycleMarkValue() {
      if (cycleMarkValueBuilder_ == null) {
        return cycleMarkValue_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkValue_;
      } else {
        return cycleMarkValueBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public Builder setCycleMarkValue(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleMarkValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cycleMarkValue_ = value;
      } else {
        cycleMarkValueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public Builder setCycleMarkValue(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (cycleMarkValueBuilder_ == null) {
        cycleMarkValue_ = builderForValue.build();
      } else {
        cycleMarkValueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public Builder mergeCycleMarkValue(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleMarkValueBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          cycleMarkValue_ != null &&
          cycleMarkValue_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getCycleMarkValueBuilder().mergeFrom(value);
        } else {
          cycleMarkValue_ = value;
        }
      } else {
        cycleMarkValueBuilder_.mergeFrom(value);
      }
      if (cycleMarkValue_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public Builder clearCycleMarkValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cycleMarkValue_ = null;
      if (cycleMarkValueBuilder_ != null) {
        cycleMarkValueBuilder_.dispose();
        cycleMarkValueBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getCycleMarkValueBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getCycleMarkValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleMarkValueOrBuilder() {
      if (cycleMarkValueBuilder_ != null) {
        return cycleMarkValueBuilder_.getMessageOrBuilder();
      } else {
        return cycleMarkValue_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkValue_;
      }
    }
    /**
     * <code>.pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getCycleMarkValueFieldBuilder() {
      if (cycleMarkValueBuilder_ == null) {
        cycleMarkValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getCycleMarkValue(),
                getParentForChildren(),
                isClean());
        cycleMarkValue_ = null;
      }
      return cycleMarkValueBuilder_;
    }

    private com.premiumminds.sonar.postgres.protobuf.Node cycleMarkDefault_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> cycleMarkDefaultBuilder_;
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     * @return Whether the cycleMarkDefault field is set.
     */
    public boolean hasCycleMarkDefault() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     * @return The cycleMarkDefault.
     */
    public com.premiumminds.sonar.postgres.protobuf.Node getCycleMarkDefault() {
      if (cycleMarkDefaultBuilder_ == null) {
        return cycleMarkDefault_ == null ? com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkDefault_;
      } else {
        return cycleMarkDefaultBuilder_.getMessage();
      }
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public Builder setCycleMarkDefault(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleMarkDefaultBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cycleMarkDefault_ = value;
      } else {
        cycleMarkDefaultBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public Builder setCycleMarkDefault(
        com.premiumminds.sonar.postgres.protobuf.Node.Builder builderForValue) {
      if (cycleMarkDefaultBuilder_ == null) {
        cycleMarkDefault_ = builderForValue.build();
      } else {
        cycleMarkDefaultBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public Builder mergeCycleMarkDefault(com.premiumminds.sonar.postgres.protobuf.Node value) {
      if (cycleMarkDefaultBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          cycleMarkDefault_ != null &&
          cycleMarkDefault_ != com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance()) {
          getCycleMarkDefaultBuilder().mergeFrom(value);
        } else {
          cycleMarkDefault_ = value;
        }
      } else {
        cycleMarkDefaultBuilder_.mergeFrom(value);
      }
      if (cycleMarkDefault_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public Builder clearCycleMarkDefault() {
      bitField0_ = (bitField0_ & ~0x00000008);
      cycleMarkDefault_ = null;
      if (cycleMarkDefaultBuilder_ != null) {
        cycleMarkDefaultBuilder_.dispose();
        cycleMarkDefaultBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.Node.Builder getCycleMarkDefaultBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getCycleMarkDefaultFieldBuilder().getBuilder();
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    public com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getCycleMarkDefaultOrBuilder() {
      if (cycleMarkDefaultBuilder_ != null) {
        return cycleMarkDefaultBuilder_.getMessageOrBuilder();
      } else {
        return cycleMarkDefault_ == null ?
            com.premiumminds.sonar.postgres.protobuf.Node.getDefaultInstance() : cycleMarkDefault_;
      }
    }
    /**
     * <code>.pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
        getCycleMarkDefaultFieldBuilder() {
      if (cycleMarkDefaultBuilder_ == null) {
        cycleMarkDefaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.premiumminds.sonar.postgres.protobuf.Node, com.premiumminds.sonar.postgres.protobuf.Node.Builder, com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder>(
                getCycleMarkDefault(),
                getParentForChildren(),
                isClean());
        cycleMarkDefault_ = null;
      }
      return cycleMarkDefaultBuilder_;
    }

    private java.lang.Object cyclePathColumn_ = "";
    /**
     * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
     * @return The cyclePathColumn.
     */
    public java.lang.String getCyclePathColumn() {
      java.lang.Object ref = cyclePathColumn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cyclePathColumn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
     * @return The bytes for cyclePathColumn.
     */
    public com.google.protobuf.ByteString
        getCyclePathColumnBytes() {
      java.lang.Object ref = cyclePathColumn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cyclePathColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
     * @param value The cyclePathColumn to set.
     * @return This builder for chaining.
     */
    public Builder setCyclePathColumn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cyclePathColumn_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCyclePathColumn() {
      cyclePathColumn_ = getDefaultInstance().getCyclePathColumn();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>string cycle_path_column = 5 [json_name = "cycle_path_column"];</code>
     * @param value The bytes for cyclePathColumn to set.
     * @return This builder for chaining.
     */
    public Builder setCyclePathColumnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cyclePathColumn_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int location_ ;
    /**
     * <code>int32 location = 6 [json_name = "location"];</code>
     * @return The location.
     */
    @java.lang.Override
    public int getLocation() {
      return location_;
    }
    /**
     * <code>int32 location = 6 [json_name = "location"];</code>
     * @param value The location to set.
     * @return This builder for chaining.
     */
    public Builder setLocation(int value) {

      location_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int32 location = 6 [json_name = "location"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLocation() {
      bitField0_ = (bitField0_ & ~0x00000020);
      location_ = 0;
      onChanged();
      return this;
    }

    private int cycleMarkType_ ;
    /**
     * <code>uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];</code>
     * @return The cycleMarkType.
     */
    @java.lang.Override
    public int getCycleMarkType() {
      return cycleMarkType_;
    }
    /**
     * <code>uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];</code>
     * @param value The cycleMarkType to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkType(int value) {

      cycleMarkType_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCycleMarkType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      cycleMarkType_ = 0;
      onChanged();
      return this;
    }

    private int cycleMarkTypmod_ ;
    /**
     * <code>int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];</code>
     * @return The cycleMarkTypmod.
     */
    @java.lang.Override
    public int getCycleMarkTypmod() {
      return cycleMarkTypmod_;
    }
    /**
     * <code>int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];</code>
     * @param value The cycleMarkTypmod to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkTypmod(int value) {

      cycleMarkTypmod_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCycleMarkTypmod() {
      bitField0_ = (bitField0_ & ~0x00000080);
      cycleMarkTypmod_ = 0;
      onChanged();
      return this;
    }

    private int cycleMarkCollation_ ;
    /**
     * <code>uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];</code>
     * @return The cycleMarkCollation.
     */
    @java.lang.Override
    public int getCycleMarkCollation() {
      return cycleMarkCollation_;
    }
    /**
     * <code>uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];</code>
     * @param value The cycleMarkCollation to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkCollation(int value) {

      cycleMarkCollation_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCycleMarkCollation() {
      bitField0_ = (bitField0_ & ~0x00000100);
      cycleMarkCollation_ = 0;
      onChanged();
      return this;
    }

    private int cycleMarkNeop_ ;
    /**
     * <code>uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];</code>
     * @return The cycleMarkNeop.
     */
    @java.lang.Override
    public int getCycleMarkNeop() {
      return cycleMarkNeop_;
    }
    /**
     * <code>uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];</code>
     * @param value The cycleMarkNeop to set.
     * @return This builder for chaining.
     */
    public Builder setCycleMarkNeop(int value) {

      cycleMarkNeop_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCycleMarkNeop() {
      bitField0_ = (bitField0_ & ~0x00000200);
      cycleMarkNeop_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:pg_query.CTECycleClause)
  }

  // @@protoc_insertion_point(class_scope:pg_query.CTECycleClause)
  private static final com.premiumminds.sonar.postgres.protobuf.CTECycleClause DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.premiumminds.sonar.postgres.protobuf.CTECycleClause();
  }

  public static com.premiumminds.sonar.postgres.protobuf.CTECycleClause getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CTECycleClause>
      PARSER = new com.google.protobuf.AbstractParser<CTECycleClause>() {
    @java.lang.Override
    public CTECycleClause parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CTECycleClause> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CTECycleClause> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.premiumminds.sonar.postgres.protobuf.CTECycleClause getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

