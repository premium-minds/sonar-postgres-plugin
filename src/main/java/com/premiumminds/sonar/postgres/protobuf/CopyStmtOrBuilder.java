// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface CopyStmtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.CopyStmt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return Whether the relation field is set.
   */
  boolean hasRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return The relation.
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVar getRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVarOrBuilder getRelationOrBuilder();

  /**
   * <code>.pg_query.Node query = 2 [json_name = "query"];</code>
   * @return Whether the query field is set.
   */
  boolean hasQuery();
  /**
   * <code>.pg_query.Node query = 2 [json_name = "query"];</code>
   * @return The query.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getQuery();
  /**
   * <code>.pg_query.Node query = 2 [json_name = "query"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getQueryOrBuilder();

  /**
   * <code>repeated .pg_query.Node attlist = 3 [json_name = "attlist"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getAttlistList();
  /**
   * <code>repeated .pg_query.Node attlist = 3 [json_name = "attlist"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getAttlist(int index);
  /**
   * <code>repeated .pg_query.Node attlist = 3 [json_name = "attlist"];</code>
   */
  int getAttlistCount();
  /**
   * <code>repeated .pg_query.Node attlist = 3 [json_name = "attlist"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getAttlistOrBuilderList();
  /**
   * <code>repeated .pg_query.Node attlist = 3 [json_name = "attlist"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getAttlistOrBuilder(
      int index);

  /**
   * <code>bool is_from = 4 [json_name = "is_from"];</code>
   * @return The isFrom.
   */
  boolean getIsFrom();

  /**
   * <code>bool is_program = 5 [json_name = "is_program"];</code>
   * @return The isProgram.
   */
  boolean getIsProgram();

  /**
   * <code>string filename = 6 [json_name = "filename"];</code>
   * @return The filename.
   */
  java.lang.String getFilename();
  /**
   * <code>string filename = 6 [json_name = "filename"];</code>
   * @return The bytes for filename.
   */
  com.google.protobuf.ByteString
      getFilenameBytes();

  /**
   * <code>repeated .pg_query.Node options = 7 [json_name = "options"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getOptionsList();
  /**
   * <code>repeated .pg_query.Node options = 7 [json_name = "options"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getOptions(int index);
  /**
   * <code>repeated .pg_query.Node options = 7 [json_name = "options"];</code>
   */
  int getOptionsCount();
  /**
   * <code>repeated .pg_query.Node options = 7 [json_name = "options"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getOptionsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node options = 7 [json_name = "options"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getOptionsOrBuilder(
      int index);

  /**
   * <code>.pg_query.Node where_clause = 8 [json_name = "whereClause"];</code>
   * @return Whether the whereClause field is set.
   */
  boolean hasWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 8 [json_name = "whereClause"];</code>
   * @return The whereClause.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 8 [json_name = "whereClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWhereClauseOrBuilder();
}
