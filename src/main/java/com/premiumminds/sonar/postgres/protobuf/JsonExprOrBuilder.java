// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface JsonExprOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.JsonExpr)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   * @return Whether the xpr field is set.
   */
  boolean hasXpr();
  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   * @return The xpr.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getXpr();
  /**
   * <code>.pg_query.Node xpr = 1 [json_name = "xpr"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getXprOrBuilder();

  /**
   * <code>.pg_query.JsonExprOp op = 2 [json_name = "op"];</code>
   * @return The enum numeric value on the wire for op.
   */
  int getOpValue();
  /**
   * <code>.pg_query.JsonExprOp op = 2 [json_name = "op"];</code>
   * @return The op.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonExprOp getOp();

  /**
   * <code>string column_name = 3 [json_name = "column_name"];</code>
   * @return The columnName.
   */
  java.lang.String getColumnName();
  /**
   * <code>string column_name = 3 [json_name = "column_name"];</code>
   * @return The bytes for columnName.
   */
  com.google.protobuf.ByteString
      getColumnNameBytes();

  /**
   * <code>.pg_query.Node formatted_expr = 4 [json_name = "formatted_expr"];</code>
   * @return Whether the formattedExpr field is set.
   */
  boolean hasFormattedExpr();
  /**
   * <code>.pg_query.Node formatted_expr = 4 [json_name = "formatted_expr"];</code>
   * @return The formattedExpr.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFormattedExpr();
  /**
   * <code>.pg_query.Node formatted_expr = 4 [json_name = "formatted_expr"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFormattedExprOrBuilder();

  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   * @return Whether the format field is set.
   */
  boolean hasFormat();
  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   * @return The format.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonFormat getFormat();
  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonFormatOrBuilder getFormatOrBuilder();

  /**
   * <code>.pg_query.Node path_spec = 6 [json_name = "path_spec"];</code>
   * @return Whether the pathSpec field is set.
   */
  boolean hasPathSpec();
  /**
   * <code>.pg_query.Node path_spec = 6 [json_name = "path_spec"];</code>
   * @return The pathSpec.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getPathSpec();
  /**
   * <code>.pg_query.Node path_spec = 6 [json_name = "path_spec"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getPathSpecOrBuilder();

  /**
   * <code>.pg_query.JsonReturning returning = 7 [json_name = "returning"];</code>
   * @return Whether the returning field is set.
   */
  boolean hasReturning();
  /**
   * <code>.pg_query.JsonReturning returning = 7 [json_name = "returning"];</code>
   * @return The returning.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonReturning getReturning();
  /**
   * <code>.pg_query.JsonReturning returning = 7 [json_name = "returning"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonReturningOrBuilder getReturningOrBuilder();

  /**
   * <code>repeated .pg_query.Node passing_names = 8 [json_name = "passing_names"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getPassingNamesList();
  /**
   * <code>repeated .pg_query.Node passing_names = 8 [json_name = "passing_names"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getPassingNames(int index);
  /**
   * <code>repeated .pg_query.Node passing_names = 8 [json_name = "passing_names"];</code>
   */
  int getPassingNamesCount();
  /**
   * <code>repeated .pg_query.Node passing_names = 8 [json_name = "passing_names"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getPassingNamesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node passing_names = 8 [json_name = "passing_names"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getPassingNamesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node passing_values = 9 [json_name = "passing_values"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getPassingValuesList();
  /**
   * <code>repeated .pg_query.Node passing_values = 9 [json_name = "passing_values"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getPassingValues(int index);
  /**
   * <code>repeated .pg_query.Node passing_values = 9 [json_name = "passing_values"];</code>
   */
  int getPassingValuesCount();
  /**
   * <code>repeated .pg_query.Node passing_values = 9 [json_name = "passing_values"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getPassingValuesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node passing_values = 9 [json_name = "passing_values"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getPassingValuesOrBuilder(
      int index);

  /**
   * <code>.pg_query.JsonBehavior on_empty = 10 [json_name = "on_empty"];</code>
   * @return Whether the onEmpty field is set.
   */
  boolean hasOnEmpty();
  /**
   * <code>.pg_query.JsonBehavior on_empty = 10 [json_name = "on_empty"];</code>
   * @return The onEmpty.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehavior getOnEmpty();
  /**
   * <code>.pg_query.JsonBehavior on_empty = 10 [json_name = "on_empty"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehaviorOrBuilder getOnEmptyOrBuilder();

  /**
   * <code>.pg_query.JsonBehavior on_error = 11 [json_name = "on_error"];</code>
   * @return Whether the onError field is set.
   */
  boolean hasOnError();
  /**
   * <code>.pg_query.JsonBehavior on_error = 11 [json_name = "on_error"];</code>
   * @return The onError.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehavior getOnError();
  /**
   * <code>.pg_query.JsonBehavior on_error = 11 [json_name = "on_error"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehaviorOrBuilder getOnErrorOrBuilder();

  /**
   * <code>bool use_io_coercion = 12 [json_name = "use_io_coercion"];</code>
   * @return The useIoCoercion.
   */
  boolean getUseIoCoercion();

  /**
   * <code>bool use_json_coercion = 13 [json_name = "use_json_coercion"];</code>
   * @return The useJsonCoercion.
   */
  boolean getUseJsonCoercion();

  /**
   * <code>.pg_query.JsonWrapper wrapper = 14 [json_name = "wrapper"];</code>
   * @return The enum numeric value on the wire for wrapper.
   */
  int getWrapperValue();
  /**
   * <code>.pg_query.JsonWrapper wrapper = 14 [json_name = "wrapper"];</code>
   * @return The wrapper.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonWrapper getWrapper();

  /**
   * <code>bool omit_quotes = 15 [json_name = "omit_quotes"];</code>
   * @return The omitQuotes.
   */
  boolean getOmitQuotes();

  /**
   * <code>uint32 collation = 16 [json_name = "collation"];</code>
   * @return The collation.
   */
  int getCollation();

  /**
   * <code>int32 location = 17 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
