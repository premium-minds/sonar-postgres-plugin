// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.postgres.protobuf;

public interface CreateStatsStmtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.CreateStatsStmt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .pg_query.Node defnames = 1 [json_name = "defnames"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getDefnamesList();
  /**
   * <code>repeated .pg_query.Node defnames = 1 [json_name = "defnames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getDefnames(int index);
  /**
   * <code>repeated .pg_query.Node defnames = 1 [json_name = "defnames"];</code>
   */
  int getDefnamesCount();
  /**
   * <code>repeated .pg_query.Node defnames = 1 [json_name = "defnames"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getDefnamesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node defnames = 1 [json_name = "defnames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getDefnamesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node stat_types = 2 [json_name = "stat_types"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getStatTypesList();
  /**
   * <code>repeated .pg_query.Node stat_types = 2 [json_name = "stat_types"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getStatTypes(int index);
  /**
   * <code>repeated .pg_query.Node stat_types = 2 [json_name = "stat_types"];</code>
   */
  int getStatTypesCount();
  /**
   * <code>repeated .pg_query.Node stat_types = 2 [json_name = "stat_types"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getStatTypesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node stat_types = 2 [json_name = "stat_types"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getStatTypesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node exprs = 3 [json_name = "exprs"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getExprsList();
  /**
   * <code>repeated .pg_query.Node exprs = 3 [json_name = "exprs"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getExprs(int index);
  /**
   * <code>repeated .pg_query.Node exprs = 3 [json_name = "exprs"];</code>
   */
  int getExprsCount();
  /**
   * <code>repeated .pg_query.Node exprs = 3 [json_name = "exprs"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getExprsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node exprs = 3 [json_name = "exprs"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getExprsOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node relations = 4 [json_name = "relations"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getRelationsList();
  /**
   * <code>repeated .pg_query.Node relations = 4 [json_name = "relations"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getRelations(int index);
  /**
   * <code>repeated .pg_query.Node relations = 4 [json_name = "relations"];</code>
   */
  int getRelationsCount();
  /**
   * <code>repeated .pg_query.Node relations = 4 [json_name = "relations"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getRelationsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node relations = 4 [json_name = "relations"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getRelationsOrBuilder(
      int index);

  /**
   * <code>string stxcomment = 5 [json_name = "stxcomment"];</code>
   * @return The stxcomment.
   */
  java.lang.String getStxcomment();
  /**
   * <code>string stxcomment = 5 [json_name = "stxcomment"];</code>
   * @return The bytes for stxcomment.
   */
  com.google.protobuf.ByteString
      getStxcommentBytes();

  /**
   * <code>bool transformed = 6 [json_name = "transformed"];</code>
   * @return The transformed.
   */
  boolean getTransformed();

  /**
   * <code>bool if_not_exists = 7 [json_name = "if_not_exists"];</code>
   * @return The ifNotExists.
   */
  boolean getIfNotExists();
}
