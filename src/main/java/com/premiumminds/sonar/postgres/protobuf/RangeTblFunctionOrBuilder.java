// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface RangeTblFunctionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.RangeTblFunction)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.Node funcexpr = 1 [json_name = "funcexpr"];</code>
   * @return Whether the funcexpr field is set.
   */
  boolean hasFuncexpr();
  /**
   * <code>.pg_query.Node funcexpr = 1 [json_name = "funcexpr"];</code>
   * @return The funcexpr.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFuncexpr();
  /**
   * <code>.pg_query.Node funcexpr = 1 [json_name = "funcexpr"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFuncexprOrBuilder();

  /**
   * <code>int32 funccolcount = 2 [json_name = "funccolcount"];</code>
   * @return The funccolcount.
   */
  int getFunccolcount();

  /**
   * <code>repeated .pg_query.Node funccolnames = 3 [json_name = "funccolnames"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getFunccolnamesList();
  /**
   * <code>repeated .pg_query.Node funccolnames = 3 [json_name = "funccolnames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFunccolnames(int index);
  /**
   * <code>repeated .pg_query.Node funccolnames = 3 [json_name = "funccolnames"];</code>
   */
  int getFunccolnamesCount();
  /**
   * <code>repeated .pg_query.Node funccolnames = 3 [json_name = "funccolnames"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getFunccolnamesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node funccolnames = 3 [json_name = "funccolnames"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFunccolnamesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node funccoltypes = 4 [json_name = "funccoltypes"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getFunccoltypesList();
  /**
   * <code>repeated .pg_query.Node funccoltypes = 4 [json_name = "funccoltypes"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFunccoltypes(int index);
  /**
   * <code>repeated .pg_query.Node funccoltypes = 4 [json_name = "funccoltypes"];</code>
   */
  int getFunccoltypesCount();
  /**
   * <code>repeated .pg_query.Node funccoltypes = 4 [json_name = "funccoltypes"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getFunccoltypesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node funccoltypes = 4 [json_name = "funccoltypes"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFunccoltypesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node funccoltypmods = 5 [json_name = "funccoltypmods"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getFunccoltypmodsList();
  /**
   * <code>repeated .pg_query.Node funccoltypmods = 5 [json_name = "funccoltypmods"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFunccoltypmods(int index);
  /**
   * <code>repeated .pg_query.Node funccoltypmods = 5 [json_name = "funccoltypmods"];</code>
   */
  int getFunccoltypmodsCount();
  /**
   * <code>repeated .pg_query.Node funccoltypmods = 5 [json_name = "funccoltypmods"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getFunccoltypmodsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node funccoltypmods = 5 [json_name = "funccoltypmods"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFunccoltypmodsOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node funccolcollations = 6 [json_name = "funccolcollations"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getFunccolcollationsList();
  /**
   * <code>repeated .pg_query.Node funccolcollations = 6 [json_name = "funccolcollations"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getFunccolcollations(int index);
  /**
   * <code>repeated .pg_query.Node funccolcollations = 6 [json_name = "funccolcollations"];</code>
   */
  int getFunccolcollationsCount();
  /**
   * <code>repeated .pg_query.Node funccolcollations = 6 [json_name = "funccolcollations"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getFunccolcollationsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node funccolcollations = 6 [json_name = "funccolcollations"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getFunccolcollationsOrBuilder(
      int index);

  /**
   * <code>repeated uint64 funcparams = 7 [json_name = "funcparams"];</code>
   * @return A list containing the funcparams.
   */
  java.util.List<java.lang.Long> getFuncparamsList();
  /**
   * <code>repeated uint64 funcparams = 7 [json_name = "funcparams"];</code>
   * @return The count of funcparams.
   */
  int getFuncparamsCount();
  /**
   * <code>repeated uint64 funcparams = 7 [json_name = "funcparams"];</code>
   * @param index The index of the element to return.
   * @return The funcparams at the given index.
   */
  long getFuncparams(int index);
}
