// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface JsonTableColumnOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.JsonTableColumn)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.JsonTableColumnType coltype = 1 [json_name = "coltype"];</code>
   * @return The enum numeric value on the wire for coltype.
   */
  int getColtypeValue();
  /**
   * <code>.pg_query.JsonTableColumnType coltype = 1 [json_name = "coltype"];</code>
   * @return The coltype.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonTableColumnType getColtype();

  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.pg_query.TypeName type_name = 3 [json_name = "typeName"];</code>
   * @return Whether the typeName field is set.
   */
  boolean hasTypeName();
  /**
   * <code>.pg_query.TypeName type_name = 3 [json_name = "typeName"];</code>
   * @return The typeName.
   */
  com.premiumminds.sonar.postgres.protobuf.TypeName getTypeName();
  /**
   * <code>.pg_query.TypeName type_name = 3 [json_name = "typeName"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.TypeNameOrBuilder getTypeNameOrBuilder();

  /**
   * <code>.pg_query.JsonTablePathSpec pathspec = 4 [json_name = "pathspec"];</code>
   * @return Whether the pathspec field is set.
   */
  boolean hasPathspec();
  /**
   * <code>.pg_query.JsonTablePathSpec pathspec = 4 [json_name = "pathspec"];</code>
   * @return The pathspec.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonTablePathSpec getPathspec();
  /**
   * <code>.pg_query.JsonTablePathSpec pathspec = 4 [json_name = "pathspec"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonTablePathSpecOrBuilder getPathspecOrBuilder();

  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   * @return Whether the format field is set.
   */
  boolean hasFormat();
  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   * @return The format.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonFormat getFormat();
  /**
   * <code>.pg_query.JsonFormat format = 5 [json_name = "format"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonFormatOrBuilder getFormatOrBuilder();

  /**
   * <code>.pg_query.JsonWrapper wrapper = 6 [json_name = "wrapper"];</code>
   * @return The enum numeric value on the wire for wrapper.
   */
  int getWrapperValue();
  /**
   * <code>.pg_query.JsonWrapper wrapper = 6 [json_name = "wrapper"];</code>
   * @return The wrapper.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonWrapper getWrapper();

  /**
   * <code>.pg_query.JsonQuotes quotes = 7 [json_name = "quotes"];</code>
   * @return The enum numeric value on the wire for quotes.
   */
  int getQuotesValue();
  /**
   * <code>.pg_query.JsonQuotes quotes = 7 [json_name = "quotes"];</code>
   * @return The quotes.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonQuotes getQuotes();

  /**
   * <code>repeated .pg_query.Node columns = 8 [json_name = "columns"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getColumnsList();
  /**
   * <code>repeated .pg_query.Node columns = 8 [json_name = "columns"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getColumns(int index);
  /**
   * <code>repeated .pg_query.Node columns = 8 [json_name = "columns"];</code>
   */
  int getColumnsCount();
  /**
   * <code>repeated .pg_query.Node columns = 8 [json_name = "columns"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getColumnsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node columns = 8 [json_name = "columns"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getColumnsOrBuilder(
      int index);

  /**
   * <code>.pg_query.JsonBehavior on_empty = 9 [json_name = "on_empty"];</code>
   * @return Whether the onEmpty field is set.
   */
  boolean hasOnEmpty();
  /**
   * <code>.pg_query.JsonBehavior on_empty = 9 [json_name = "on_empty"];</code>
   * @return The onEmpty.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehavior getOnEmpty();
  /**
   * <code>.pg_query.JsonBehavior on_empty = 9 [json_name = "on_empty"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehaviorOrBuilder getOnEmptyOrBuilder();

  /**
   * <code>.pg_query.JsonBehavior on_error = 10 [json_name = "on_error"];</code>
   * @return Whether the onError field is set.
   */
  boolean hasOnError();
  /**
   * <code>.pg_query.JsonBehavior on_error = 10 [json_name = "on_error"];</code>
   * @return The onError.
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehavior getOnError();
  /**
   * <code>.pg_query.JsonBehavior on_error = 10 [json_name = "on_error"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.JsonBehaviorOrBuilder getOnErrorOrBuilder();

  /**
   * <code>int32 location = 11 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
