// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface RuleStmtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.RuleStmt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return Whether the relation field is set.
   */
  boolean hasRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return The relation.
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVar getRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.RangeVarOrBuilder getRelationOrBuilder();

  /**
   * <code>string rulename = 2 [json_name = "rulename"];</code>
   * @return The rulename.
   */
  java.lang.String getRulename();
  /**
   * <code>string rulename = 2 [json_name = "rulename"];</code>
   * @return The bytes for rulename.
   */
  com.google.protobuf.ByteString
      getRulenameBytes();

  /**
   * <code>.pg_query.Node where_clause = 3 [json_name = "whereClause"];</code>
   * @return Whether the whereClause field is set.
   */
  boolean hasWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 3 [json_name = "whereClause"];</code>
   * @return The whereClause.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getWhereClause();
  /**
   * <code>.pg_query.Node where_clause = 3 [json_name = "whereClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getWhereClauseOrBuilder();

  /**
   * <code>.pg_query.CmdType event = 4 [json_name = "event"];</code>
   * @return The enum numeric value on the wire for event.
   */
  int getEventValue();
  /**
   * <code>.pg_query.CmdType event = 4 [json_name = "event"];</code>
   * @return The event.
   */
  com.premiumminds.sonar.postgres.protobuf.CmdType getEvent();

  /**
   * <code>bool instead = 5 [json_name = "instead"];</code>
   * @return The instead.
   */
  boolean getInstead();

  /**
   * <code>repeated .pg_query.Node actions = 6 [json_name = "actions"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getActionsList();
  /**
   * <code>repeated .pg_query.Node actions = 6 [json_name = "actions"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getActions(int index);
  /**
   * <code>repeated .pg_query.Node actions = 6 [json_name = "actions"];</code>
   */
  int getActionsCount();
  /**
   * <code>repeated .pg_query.Node actions = 6 [json_name = "actions"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getActionsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node actions = 6 [json_name = "actions"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getActionsOrBuilder(
      int index);

  /**
   * <code>bool replace = 7 [json_name = "replace"];</code>
   * @return The replace.
   */
  boolean getReplace();
}
