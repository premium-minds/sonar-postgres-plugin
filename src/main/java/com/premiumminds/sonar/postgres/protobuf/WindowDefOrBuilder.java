// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

// Protobuf Java Version: 3.25.1
package com.premiumminds.sonar.postgres.protobuf;

public interface WindowDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.WindowDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>string refname = 2 [json_name = "refname"];</code>
   * @return The refname.
   */
  java.lang.String getRefname();
  /**
   * <code>string refname = 2 [json_name = "refname"];</code>
   * @return The bytes for refname.
   */
  com.google.protobuf.ByteString
      getRefnameBytes();

  /**
   * <code>repeated .pg_query.Node partition_clause = 3 [json_name = "partitionClause"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getPartitionClauseList();
  /**
   * <code>repeated .pg_query.Node partition_clause = 3 [json_name = "partitionClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getPartitionClause(int index);
  /**
   * <code>repeated .pg_query.Node partition_clause = 3 [json_name = "partitionClause"];</code>
   */
  int getPartitionClauseCount();
  /**
   * <code>repeated .pg_query.Node partition_clause = 3 [json_name = "partitionClause"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getPartitionClauseOrBuilderList();
  /**
   * <code>repeated .pg_query.Node partition_clause = 3 [json_name = "partitionClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getPartitionClauseOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node order_clause = 4 [json_name = "orderClause"];</code>
   */
  java.util.List<com.premiumminds.sonar.postgres.protobuf.Node> 
      getOrderClauseList();
  /**
   * <code>repeated .pg_query.Node order_clause = 4 [json_name = "orderClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.Node getOrderClause(int index);
  /**
   * <code>repeated .pg_query.Node order_clause = 4 [json_name = "orderClause"];</code>
   */
  int getOrderClauseCount();
  /**
   * <code>repeated .pg_query.Node order_clause = 4 [json_name = "orderClause"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder> 
      getOrderClauseOrBuilderList();
  /**
   * <code>repeated .pg_query.Node order_clause = 4 [json_name = "orderClause"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getOrderClauseOrBuilder(
      int index);

  /**
   * <code>int32 frame_options = 5 [json_name = "frameOptions"];</code>
   * @return The frameOptions.
   */
  int getFrameOptions();

  /**
   * <code>.pg_query.Node start_offset = 6 [json_name = "startOffset"];</code>
   * @return Whether the startOffset field is set.
   */
  boolean hasStartOffset();
  /**
   * <code>.pg_query.Node start_offset = 6 [json_name = "startOffset"];</code>
   * @return The startOffset.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getStartOffset();
  /**
   * <code>.pg_query.Node start_offset = 6 [json_name = "startOffset"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getStartOffsetOrBuilder();

  /**
   * <code>.pg_query.Node end_offset = 7 [json_name = "endOffset"];</code>
   * @return Whether the endOffset field is set.
   */
  boolean hasEndOffset();
  /**
   * <code>.pg_query.Node end_offset = 7 [json_name = "endOffset"];</code>
   * @return The endOffset.
   */
  com.premiumminds.sonar.postgres.protobuf.Node getEndOffset();
  /**
   * <code>.pg_query.Node end_offset = 7 [json_name = "endOffset"];</code>
   */
  com.premiumminds.sonar.postgres.protobuf.NodeOrBuilder getEndOffsetOrBuilder();

  /**
   * <code>int32 location = 8 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
